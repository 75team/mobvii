/**
 * @fileoverview 系统程序
 * @author dron
 * @version 1.1
 * @date 2010-05-12
 */

/**
 * @namespace System
 */
var System = {

	/**
	 * 系统名称
	 * @property
	 * @type String
	 * @member System
	 */
	name: "SystemName",

	/**
	 * 创建命名空间
	 * @method nameSpace
	 * @param {String} path 命名空间字符串
	 * @param {All} value 可选，命名空间末端的值
	 * @return {Object} 创建成功后的命名空间字符串所对应的对象
	 * @member System
	 */
	nameSpace: function(path, value){
		path = path.replace(/\{systemName\}/g, this.name);
		if(typeof(path) == "string"){
			var parts, part, rtn, length;
			parts = path.split(".");
			rtn = window;
			while(length = parts.length){
				part = parts.shift();
				if(typeof(rtn[part]) != "object" &&
					typeof(rtn[part]) != "function"){
					if(typeof value != "undefined" && length == 1){
						rtn[part] = value;
					}else{
						rtn[part] = {};
					}
				}
				rtn = rtn[part];
			}
			return rtn;
		}
	},

	/**
	 * 查找页面上的模块位置（!!! 这段请勿同步 Product Template）
	 * @method findModulesContainer
	 * @member System
	 */
	findModulesContainer: function(){
		var layers = document.body.getElementsByTagName("div");
		var map = this.modulesContainerMap = {};
		for(var i = 0, r, name, l = layers.length; i < l; i ++){
			r = layers[i];
			if(name = r.getAttribute("module")){
				map[name] = r;
			}
		}
	},

	/**
	 * 取得页面上指定模块的容器（!!! 这段请勿同步 Product Template）
	 * @method getModuleContainer
	 * @param {String} moduleName 模块名称
	 * @return {Html Element} dom
	 * @member System
	 */
	getModuleContainer: function(moduleName){
		return this.modulesContainerMap[moduleName] || null;
	},

	/**
	 * 添加事件监听
	 * @method addEventListener
	 * @param {String} name 事件名称
	 * @param {Function} fn 事件处理函数
	 * @member System
	 */
	addEventListener: function(name, fn){
		// please increase the 'event' processing extend to
		// implement this interface.
	},

	/**
	 * 发送事件
	 * @method fireEvent
	 * @param {String} name 事件名称
	 * @param {Array} params 发送给事件处理函数的参数
	 * @member System
	 */
	fireEvent: function(name, params){
		// please increase the 'event' processing extend to
		// implement this interface.
	},

	/**
	 * 设置全局变量
	 * @method set
	 * @param {String} name 变量名称
	 * @param {Any} value 变量值
	 * @member System
	 */
	set: function(name, value){
		// please increase the 'global' processing extend to
		// implement this interface.
	},

	/**
	 * 获得全局变量
	 * @method get
	 * @param {String} name 变量名称
	 * @return {Any} 变量值
	 * @member System
	 */
	get: function(name){
		// please increase the 'global' processing extend to
		// implement this interface.
	},

	/**
	 * 定义全局变量钩子
	 * @method hook
	 * @param {String} name 变量名称
	 * @param {Function} func 钩子回调函数
	 * @member System
	 */
	hook: function(name, func){
		// please increase the 'global' processing extend to
		// implement this interface.
	},

	/**
	 * 打印所有全局变量（用于开发调试）
	 * @method print
	 * @member System
	 */
	print: function(){
		// please increase the 'global' processing extend to
		// implement this interface.
	},

	/**
	 * 系统初始化（!!! 这段请勿同步 Product Template）
	 * @method initialize
	 * @member System
	 */
	initialize: function(){
		this.findModulesContainer();
	}
};

System.initialize(); // （!!! 这段请勿同步 Product Template）
/**
 * @fileoverview System.event
 * @author dron
 * @version 1.1
 * @date 2010-09-10
 */

void function(){
	var ext = new (Ucren.Class(
		/* constructor */ function(){
			// nothing
		},

		/* methods */ {
			// nothing
		}
	));

	var fireEvent = function(name){
		var args = Array.prototype.slice.call(arguments, 1);
		ext.fireEvent(name, args);
	};

	/**
	 * @namespace System
	 */

	/**
	 * ¼
	 * @method addEventListener
	 * @param {String} name ¼
	 * @param {Function} func ¼ص
	 * @member System
	 */
	System.addEventListener = ext.on.bind(ext);

	/**
	 * ¼
	 * @method fireEvent
	 * @param {String} name ¼
	 * @params {All} params ¼
	 * @member System
	 */
	System.fireEvent = fireEvent;
}();
/**
 * @fileoverview System.global
 * @author dron
 * @version 1.1
 * @date 2010-09-10
 */

void function(){
	var ext;
	var globalMap = {};
	var hookMap = {};

	var template = new Ucren.Template(
		"<span style='font-style: italic; color: #808080;'>@{type}</span> ",
		"<span style='color: @{color};'>@{name}</span> = @{value}");

	ext = new (Ucren.Class(
		/* constructor */ function(){
		},

		/* methods */ {
			set: function(name, value){
				globalMap[name] = value;
			},

			get: function(name){
				return globalMap[name];
			},

			print: function(){
				var result = [], value, type, length = 0;
				for(var i in globalMap){
					value = globalMap[i];
					type = typeof(value);
					result[length ++] = template.apply({
						type: type,
						color: type == "object" && i.indexOf("on") !== 0 ?
								"red" : "blue",
						name: i,
						value: type == "string" ? value.htmlEncode() : value
					});
				};

				setTimeout(function(){
					document.write("<div style='font-family: fixedSys;'>" +
						result.join("<br /><br />") + "</div>");
				}, 1);
			}
		}
	));

	ext.on("set", function(name, value){
		if(hookMap[name]){
			Ucren.each(hookMap[name], function(func){
				func(value);
			});
		}
	});

	var hook = function(name, func){
		if(hookMap[name])
			hookMap[name].push(func);
		else
			hookMap[name] = [func];
	};

	/**
	 * @namespace System
	 */

	/**
	 * ȫֱ
	 * @method set
	 * @param {String} name ȫֱ
	 * @param {All} value ȫֱֵ
	 * @member System
	 */
	System.set = ext.set.bind(ext);

	/**
	 * ȫֱ
	 * @method get
	 * @param {String} name ȫֱ
	 * @return {All} ȫֱֵ
	 * @member System
	 */
	System.get = ext.get.bind(ext);

	/**
	 * ӡȫֱ
	 * @method print
	 * @member System
	 */
	System.print = ext.print.bind(ext);

	/**
	 * ȫֱ
	 * @method hoot
	 * @param {String} name ȫֱ
	 * @param {Function} func ص
	 * @member System
	 */
	System.hook = hook;
}();

/**
 * @fileoverview 全局变量
 * @author dron
 * @date 2010-09-14
 */

var GlobalData = {

	Speed: 0, // 当前速度
	speedUpNumber: .003, // 人为加速
	speedDownNumber: .03, // 人为减速
	naturalDownNumber: .0000, // 自然减速
	forciblySpeedDownNumber: .008, // 被迫减速（此系数应略大于人为加速系数）
	lowSpeed: 0, // 自然减速后的最低速度（待速）
	forciblySpeedDownLowestSpeed: 0.1, // 被迫减速后的最低速度
//	lowestRenderSpeed: 0.036, // 最低的渲染速度

	carDefaultLeft: 340, // 汽车中点的位置
	carWidth: 100, // 汽车宽度
	carMaxLeft: 150, // 汽车最大偏移距离
	carPicLength: 13, // 汽车图片长度（张数）
	carMaxCentrifugalForce: 5, // 最大离心力
	carMaxTrunForce: 4, // 最大扭力

	CurveCoefficient: 0, // 弯道系数
	maxCurveCoefficient: 230, // 最大弯道系数
	curveCoefficientMoveStep: 2, // 弯道系数移动过程步长

	paperWidth: 676, // 道路画布宽
	paperHeight: 100, // 道路画布高

	roadColor: "#ccc", // 路面的颜色
	strokeColor: "#808080", // 路边沿的颜色

	dataXStep: 5, // 缓存路径 x 轴步长
	dataYStep: 5, // 缓存路径 y 轴步长

	maxHillScrollSpeed: 5, // 山体的最大移动速度
	cloudSpeedDivisor: 4, // 云的移动速度除数（除山体速度）

	coversData: [ // 路边覆盖物
		{ src: "images/covers/tree1.png", width: 214, height: 233, shadowHeight: 30 },
		{ src: "images/covers/tree2.png", width: 274, height: 379, shadowHeight: 33 },
		{ src: "images/covers/tree3.png", width: 196, height: 151, shadowHeight: 25 },
		{ src: "images/covers/tree4.png", width: 171, height: 208, shadowHeight: 18 },
		{ src: "images/covers/tree5.png", width: 147, height: 153, shadowHeight: 18 },
		{ src: "images/covers/tree6.png", width: 198, height: 259, shadowHeight: 19 }
	],
	coverMargin: 0, // 覆盖物离路沿最小距离
	coverZoomStart: .08, // 覆盖物刚开始出现于屏幕时的放大倍数
	coverTopPadding: 200, // 覆盖物刚开始出现于屏幕时的 top 位置
	coverCreateTimeout: 2.1, // 覆盖物出现的时间间隔比率
	coverRandomMarginScope: 0, // 随机距路沿距离范围
	coverMovePixelDivisor: 3, // 覆盖物移动步长除数

	maxDirKeyHoldNumer: 10, // 方向键停留

	dashboardWidth: 256, // 时速表宽
	dashboardHeight: 145, // 时速表高
	dashboardPointerSize: 209, // 表指针尺寸
	dashboardPointerImage: "images/speed-pointer.gif",
	dashboardPointerMaxRotation: 170,
	dashboardPointerShakeSize: .4, // 指针抖动时范围

	roadChangeCurveCoefficientRandomTimeoutMin: 1500, // 变更弯道系数随机时间范围（小）
	roadChangeCurveCoefficientRandomTimeoutMax: 3000, // 变更弯道系数随机时间范围（大）

	timerPeriod: 16, // 全局时钟周期


	// 以下为写死的数据项，将由程序来改变它，人勿改

	dirKeyHoldNumer: 0

};
/**
 * @fileoverview road 模块
 * @author dron
 * @date 2010-09-11
 */

void function(){
	/**
	 * configs
	 */
	var point0 = { x: 50, y: 100 };
	var point1def = { x: 280, y: -1 };
	var point2def = { x: 396, y: -1 };
	var point3 = { x: 626, y: 100 };
	var control0 = Ucren.apply({}, point1def);
	var control1 = Ucren.apply({}, point2def);

	var paperWidth = GlobalData.paperWidth;
	var paperHeight = GlobalData.paperHeight;
	var maxCurveCoefficient = GlobalData.maxCurveCoefficient;
	var dataYStep = GlobalData.dataYStep;
	var roadColor = GlobalData.roadColor;
	var strokeColor = GlobalData.strokeColor;
	var step = GlobalData.curveCoefficientMoveStep;

	/**
	 * local variables
	 */
	var container = System.getModuleContainer("road");
//	var maxPathLength = Math.pow(point1def.x - point0.x, 2) +
//		Math.pow(point0.y - point1def.y, 2);
//		maxPathLength = Math.sqrt(maxPathLength) - 40;
	var paper, path;

/**
 *    1__2
 *   /    \
 *  /      \
 * 0--------3
 */


// 左下开始，顺时针
//	var pathTemplate = new Ucren.Template(
//		"M@{point0x} @{point0y}C@{control0x} @{control0y} @{point1x} @{point1y} @{point1x} @{point1y}L@{point2x} @{point2y}C@{point2x} @{point2y} @{control1x} @{control1y} @{point3x} @{point3y}Z");

// 左上开始，逆时针
	var pathTemplate = new Ucren.Template(
		"M@{point1x} @{point1y}C@{control0x} @{control0y} @{point0x} @{point0y} @{point0x} @{point0y}L@{point3x} @{point3y}C@{point3x} @{point3y} @{control1x} @{control1y} @{point2x} @{point2y}Z");

		pathTemplate.string = pathTemplate.string.format({
			point0x: point0.x,
			point0y: point0.y,

			//point1x: point1def.x - n,
			point1y: point1def.y,

			//point2x: point2def.x - n,
			point2y: point2def.y,

			point3x: point3.x,
			point3y: point3.y,

			control0x: control0.x,
			control0y: control0.y,

			control1x: control1.x,
			control1y: control1.y
		});

	/**
	 * module interface
	 */
	var module = System.nameSpace("{systemName}.modules.road", {

		curveCoefficient: 0,
		targetCurveCoefficient: 0,
		targetCurveCoefficientCallback: Ucren.nul,

		initialize: function(){
			paper = Raphael(container, paperWidth, paperHeight);

			var pathData = pathTemplate.apply({
				point1x: point1def.x,
				point2x: point2def.x
			});
			path = paper.path(pathData).attr({
				"fill": roadColor,
				"stroke-width": 1,
				"stroke": strokeColor
			});
			System.addEventListener("Timer", module.timer.bind(module));
		},

		draw: function(n){
			path.attr({ path: pathTemplate.apply({
				point1x: point1def.x + n,
				point2x: point2def.x + n
			}) });
			GlobalData.CurveCoefficient = n;
//			System.fireEvent("RoadRender", n);
		},

		excuteTargetCurveCoefficientCallback: function(){
			this.targetCurveCoefficientCallback();
			this.targetCurveCoefficientCallback = Ucren.nul;
		},

		setTargetCurveCoefficient: function(targetCurveCoefficient, callback){
			this.targetCurveCoefficientCallback = callback;
			if(Math.abs(this.targetCurveCoefficient) > maxCurveCoefficient)
				this.targetCurveCoefficient = maxCurveCoefficient *
					(this.targetCurveCoefficient > 0 ? 1 : -1);

			if(this.targetCurveCoefficient == targetCurveCoefficient)
				return this.excuteTargetCurveCoefficientCallback &&
					this.excuteTargetCurveCoefficientCallback();

			this.targetCurveCoefficient = targetCurveCoefficient;
		},

		getPoints: function(){
			var result = [];
			var resultLength = 0;
			var len = 0;
			var p;
			var lastY = -10;

			while(true){
				p = path.getPointAtLength(len);

				if(lastY == p.y || p.y > paperHeight)break;

				result[resultLength ++] = Math.round(p.x);
				result[resultLength ++] = Math.round(p.y);

				lastY = p.y;
				len += dataYStep;
			}

			return result;
		},

//		getMaxPathLength: function(){
//			return maxPathLength;
//		},

		timer: function(){
			var d, m;
			if(d = this.targetCurveCoefficient - this.curveCoefficient){
				m = step * GlobalData.Speed * (d > 0 ? 1 : -1);
				m = d > 0 ?
					(m > d ? d : m) : (m < d ? d : m);
				this.draw(this.curveCoefficient += m);
			}else{
				this.excuteTargetCurveCoefficientCallback();
			}
		}
	});

	/**
	 * initialize
	 */
}();
/**
 * @fileoverview pathCacher 模块
 * @author dron
 * @date 2010-09-13
 */


void function(){
	/**
	 * configs
	 */

	// 间隔 5*5
	// var data = {"0":{"0":278,"5":267,"10":256,"15":244,"20":233,"25":221,"30":210,"35":198,"40":187,"45":176,"50":165,"55":154,"60":142,"65":131,"70":119,"75":108,"80":96,"85":85,"90":74,"95":62,"100":50},"5":{"0":283,"5":270,"10":258,"15":246,"20":234,"25":223,"30":211,"35":199,"40":189,"45":177,"50":166,"55":154,"60":142,"65":131,"70":119,"75":108,"80":96,"85":85,"90":73,"95":62,"100":50},"10":{"0":288,"5":274,"10":262,"15":249,"20":237,"25":224,"30":212,"35":201,"40":189,"45":178,"50":166,"55":154,"60":143,"65":131,"70":120,"75":108,"80":97,"85":85,"90":74,"95":62,"100":50},"15":{"0":292,"5":277,"10":264,"15":251,"20":239,"25":226,"30":214,"35":202,"40":190,"45":178,"50":166,"55":155,"60":143,"65":131,"70":120,"75":108,"80":97,"85":85,"90":74,"95":62,"100":50},"20":{"0":297,"5":281,"10":267,"15":253,"20":241,"25":228,"30":215,"35":203,"40":191,"45":179,"50":167,"55":155,"60":143,"65":132,"70":120,"75":108,"80":97,"85":85,"90":74,"95":62,"100":50},"25":{"0":302,"5":284,"10":269,"15":255,"20":242,"25":229,"30":217,"35":204,"40":192,"45":180,"50":168,"55":156,"60":144,"65":132,"70":120,"75":108,"80":97,"85":85,"90":74,"95":62,"100":50},"30":{"0":306,"5":287,"10":272,"15":258,"20":244,"25":231,"30":218,"35":205,"40":193,"45":180,"50":168,"55":156,"60":144,"65":132,"70":120,"75":108,"80":97,"85":85,"90":74,"95":62,"100":50},"35":{"0":311,"5":291,"10":274,"15":260,"20":246,"25":232,"30":219,"35":206,"40":193,"45":181,"50":168,"55":156,"60":144,"65":132,"70":120,"75":109,"80":97,"85":85,"90":74,"95":62,"100":50},"40":{"0":315,"5":294,"10":278,"15":262,"20":247,"25":234,"30":220,"35":207,"40":194,"45":182,"50":169,"55":157,"60":145,"65":133,"70":121,"75":109,"80":97,"85":85,"90":74,"95":62,"100":50},"45":{"0":320,"5":297,"10":280,"15":265,"20":249,"25":235,"30":221,"35":208,"40":195,"45":182,"50":170,"55":157,"60":145,"65":133,"70":121,"75":109,"80":97,"85":85,"90":74,"95":62,"100":50},"50":{"0":325,"5":301,"10":283,"15":267,"20":252,"25":236,"30":222,"35":209,"40":196,"45":183,"50":170,"55":158,"60":145,"65":133,"70":121,"75":109,"80":97,"85":85,"90":74,"95":62,"100":50},"55":{"0":329,"5":304,"10":285,"15":269,"20":254,"25":238,"30":224,"35":210,"40":197,"45":183,"50":171,"55":158,"60":145,"65":133,"70":121,"75":109,"80":97,"85":85,"90":74,"95":62,"100":50},"60":{"0":332,"5":308,"10":288,"15":271,"20":255,"25":240,"30":225,"35":211,"40":197,"45":184,"50":171,"55":158,"60":146,"65":133,"70":121,"75":109,"80":97,"85":85,"90":74,"95":62,"100":50},"65":{"0":335,"5":311,"10":291,"15":273,"20":257,"25":242,"30":227,"35":212,"40":198,"45":185,"50":172,"55":159,"60":146,"65":134,"70":121,"75":109,"80":97,"85":85,"90":74,"95":62,"100":50},"70":{"0":339,"5":314,"10":294,"15":275,"20":259,"25":243,"30":228,"35":213,"40":199,"45":185,"50":172,"55":159,"60":146,"65":134,"70":122,"75":109,"80":97,"85":86,"90":74,"95":62,"100":50},"75":{"0":343,"5":318,"10":297,"15":277,"20":260,"25":245,"30":229,"35":214,"40":200,"45":186,"50":173,"55":160,"60":147,"65":134,"70":122,"75":109,"80":97,"85":85,"90":74,"95":62,"100":50},"80":{"0":346,"5":321,"10":299,"15":280,"20":262,"25":246,"30":231,"35":216,"40":201,"45":187,"50":173,"55":160,"60":147,"65":134,"70":122,"75":110,"80":98,"85":86,"90":74,"95":62,"100":50},"85":{"0":349,"5":324,"10":302,"15":283,"20":264,"25":247,"30":232,"35":217,"40":201,"45":187,"50":174,"55":160,"60":147,"65":135,"70":122,"75":110,"80":98,"85":86,"90":74,"95":62,"100":50},"90":{"0":353,"5":328,"10":305,"15":285,"20":266,"25":249,"30":233,"35":218,"40":203,"45":188,"50":174,"55":161,"60":148,"65":135,"70":122,"75":110,"80":98,"85":86,"90":74,"95":62,"100":50},"95":{"0":357,"5":332,"10":307,"15":287,"20":268,"25":250,"30":234,"35":219,"40":204,"45":189,"50":175,"55":161,"60":148,"65":135,"70":122,"75":110,"80":98,"85":86,"90":74,"95":62,"100":50},"100":{"0":362,"5":335,"10":310,"15":289,"20":270,"25":252,"30":235,"35":220,"40":205,"45":190,"50":175,"55":161,"60":148,"65":135,"70":122,"75":110,"80":98,"85":86,"90":74,"95":62,"100":50},"105":{"0":367,"5":337,"10":313,"15":291,"20":272,"25":253,"30":237,"35":221,"40":205,"45":191,"50":176,"55":162,"60":149,"65":135,"70":123,"75":110,"80":98,"85":86,"90":74,"95":62,"100":50},"110":{"0":371,"5":340,"10":316,"15":293,"20":274,"25":256,"30":238,"35":222,"40":206,"45":191,"50":176,"55":162,"60":149,"65":136,"70":123,"75":110,"80":98,"85":86,"90":74,"95":62,"100":50},"115":{"0":375,"5":342,"10":318,"15":295,"20":275,"25":257,"30":239,"35":223,"40":207,"45":192,"50":177,"55":163,"60":149,"65":136,"70":123,"75":110,"80":98,"85":86,"90":74,"95":62,"100":50},"120":{"0":379,"5":345,"10":321,"15":297,"20":277,"25":259,"30":240,"35":224,"40":208,"45":193,"50":177,"55":163,"60":150,"65":136,"70":123,"75":111,"80":98,"85":86,"90":74,"95":62,"100":50},"125":{"0":383,"5":349,"10":324,"15":300,"20":279,"25":260,"30":241,"35":225,"40":209,"45":193,"50":179,"55":164,"60":150,"65":136,"70":123,"75":111,"80":98,"85":86,"90":74,"95":62,"100":50},"130":{"0":387,"5":351,"10":326,"15":303,"20":281,"25":261,"30":244,"35":226,"40":209,"45":194,"50":179,"55":164,"60":150,"65":137,"70":124,"75":111,"80":98,"85":86,"90":74,"95":62,"100":50},"135":{"0":391,"5":354,"10":329,"15":305,"20":282,"25":263,"30":245,"35":227,"40":210,"45":195,"50":180,"55":164,"60":150,"65":137,"70":124,"75":111,"80":98,"85":86,"90":74,"95":62,"100":50},"140":{"0":396,"5":356,"10":331,"15":307,"20":284,"25":264,"30":246,"35":228,"40":211,"45":195,"50":180,"55":165,"60":151,"65":137,"70":124,"75":111,"80":98,"85":86,"90":74,"95":62,"100":50},"145":{"0":400,"5":360,"10":333,"15":309,"20":286,"25":266,"30":247,"35":229,"40":212,"45":196,"50":181,"55":165,"60":151,"65":137,"70":124,"75":111,"80":98,"85":86,"90":74,"95":62,"100":50},"150":{"0":405,"5":363,"10":336,"15":311,"20":288,"25":267,"30":248,"35":230,"40":213,"45":197,"50":181,"55":166,"60":151,"65":137,"70":124,"75":111,"80":98,"85":86,"90":74,"95":62,"100":50},"155":{"0":409,"5":366,"10":338,"15":313,"20":291,"25":269,"30":250,"35":232,"40":214,"45":197,"50":182,"55":167,"60":152,"65":138,"70":124,"75":111,"80":99,"85":86,"90":74,"95":62,"100":50},"160":{"0":413,"5":369,"10":341,"15":316,"20":292,"25":270,"30":251,"35":232,"40":214,"45":198,"50":182,"55":167,"60":152,"65":138,"70":125,"75":111,"80":99,"85":86,"90":74,"95":62,"100":50},"165":{"0":417,"5":372,"10":343,"15":318,"20":294,"25":272,"30":252,"35":234,"40":215,"45":199,"50":183,"55":168,"60":152,"65":138,"70":125,"75":112,"80":99,"85":86,"90":74,"95":62,"100":50},"170":{"0":421,"5":376,"10":345,"15":320,"20":296,"25":273,"30":253,"35":235,"40":216,"45":199,"50":183,"55":168,"60":153,"65":138,"70":125,"75":112,"80":99,"85":86,"90":74,"95":62,"100":50},"175":{"0":425,"5":379,"10":347,"15":322,"20":298,"25":275,"30":254,"35":236,"40":217,"45":200,"50":184,"55":169,"60":153,"65":139,"70":125,"75":112,"80":99,"85":86,"90":74,"95":62,"100":50},"180":{"0":429,"5":382,"10":348,"15":324,"20":299,"25":276,"30":256,"35":236,"40":218,"45":201,"50":184,"55":169,"60":153,"65":139,"70":125,"75":112,"80":99,"85":86,"90":74,"95":62,"100":50},"185":{"0":435,"5":386,"10":351,"15":326,"20":301,"25":279,"30":257,"35":238,"40":218,"45":201,"50":185,"55":169,"60":153,"65":139,"70":125,"75":112,"80":99,"85":86,"90":74,"95":62,"100":50},"190":{"0":439,"5":389,"10":353,"15":328,"20":303,"25":280,"30":258,"35":239,"40":220,"45":202,"50":186,"55":170,"60":154,"65":139,"70":126,"75":112,"80":99,"85":86,"90":74,"95":62,"100":50},"195":{"0":443,"5":392,"10":356,"15":330,"20":305,"25":282,"30":259,"35":239,"40":221,"45":203,"50":186,"55":170,"60":155,"65":140,"70":126,"75":112,"80":99,"85":87,"90":74,"95":62,"100":50},"200":{"0":447,"5":395,"10":359,"15":332,"20":307,"25":283,"30":261,"35":240,"40":222,"45":203,"50":186,"55":171,"60":155,"65":140,"70":126,"75":112,"80":99,"85":86,"90":74,"95":62,"100":50},"205":{"0":451,"5":398,"10":361,"15":333,"20":308,"25":285,"30":262,"35":242,"40":223,"45":204,"50":187,"55":171,"60":156,"65":140,"70":126,"75":112,"80":99,"85":87,"90":74,"95":62,"100":50},"210":{"0":455,"5":401,"10":365,"15":335,"20":310,"25":286,"30":263,"35":243,"40":224,"45":205,"50":188,"55":171,"60":156,"65":140,"70":126,"75":112,"80":99,"85":87,"90":74,"95":62,"100":50},"215":{"0":459,"5":404,"10":367,"15":336,"20":311,"25":287,"30":265,"35":243,"40":224,"45":205,"50":188,"55":172,"60":156,"65":141,"70":126,"75":113,"80":99,"85":87,"90":74,"95":62,"100":50},"220":{"0":464,"5":408,"10":370,"15":338,"20":313,"25":289,"30":266,"35":244,"40":225,"45":206,"50":189,"55":172,"60":157,"65":142,"70":126,"75":113,"80":100,"85":87,"90":74,"95":62,"100":50},"225":{"0":468,"5":411,"10":372,"15":340,"20":315,"25":290,"30":268,"35":246,"40":226,"45":207,"50":189,"55":173,"60":157,"65":141,"70":127,"75":113,"80":99,"85":87,"90":74,"95":62,"100":50},"230":{"0":472,"5":415,"10":375,"15":342,"20":317,"25":292,"30":269,"35":246,"40":227,"45":207,"50":190,"55":173,"60":157,"65":142,"70":127,"75":113,"80":100,"85":87,"90":74,"95":62,"100":50},"-230":{"0":80,"5":112,"10":131,"15":142,"20":149,"25":152,"30":152,"35":151,"40":148,"45":144,"50":139,"55":133,"60":126,"65":119,"70":111,"75":102,"80":93,"85":83,"90":73,"95":62,"100":50},"-225":{"0":85,"5":116,"10":134,"15":145,"20":150,"25":153,"30":153,"35":152,"40":149,"45":145,"50":140,"55":134,"60":127,"65":120,"70":111,"75":102,"80":93,"85":83,"90":73,"95":62,"100":50},"-220":{"0":90,"5":119,"10":137,"15":147,"20":152,"25":155,"30":155,"35":153,"40":150,"45":146,"50":141,"55":134,"60":127,"65":120,"70":111,"75":102,"80":93,"85":83,"90":73,"95":62,"100":50},"-215":{"0":94,"5":122,"10":139,"15":149,"20":154,"25":156,"30":156,"35":154,"40":151,"45":146,"50":141,"55":135,"60":127,"65":120,"70":111,"75":102,"80":93,"85":83,"90":73,"95":62,"100":50},"-210":{"0":98,"5":126,"10":142,"15":151,"20":156,"25":158,"30":157,"35":155,"40":152,"45":147,"50":142,"55":135,"60":128,"65":120,"70":111,"75":102,"80":93,"85":83,"90":73,"95":62,"100":50},"-205":{"0":102,"5":129,"10":145,"15":154,"20":158,"25":159,"30":158,"35":156,"40":152,"45":148,"50":142,"55":136,"60":128,"65":121,"70":112,"75":102,"80":93,"85":83,"90":73,"95":62,"100":50},"-200":{"0":106,"5":133,"10":148,"15":156,"20":160,"25":161,"30":160,"35":157,"40":153,"45":148,"50":143,"55":136,"60":128,"65":121,"70":112,"75":102,"80":94,"85":83,"90":73,"95":62,"100":50},"-195":{"0":111,"5":136,"10":150,"15":158,"20":161,"25":162,"30":161,"35":158,"40":154,"45":149,"50":143,"55":137,"60":129,"65":121,"70":112,"75":103,"80":94,"85":83,"90":73,"95":62,"100":50},"-190":{"0":114,"5":139,"10":153,"15":160,"20":163,"25":164,"30":162,"35":159,"40":155,"45":150,"50":143,"55":137,"60":129,"65":121,"70":112,"75":103,"80":93,"85":83,"90":73,"95":62,"100":50},"-185":{"0":118,"5":143,"10":156,"15":162,"20":165,"25":165,"30":164,"35":160,"40":156,"45":151,"50":144,"55":137,"60":130,"65":122,"70":112,"75":103,"80":94,"85":84,"90":73,"95":62,"100":50},"-180":{"0":122,"5":146,"10":158,"15":164,"20":167,"25":167,"30":165,"35":161,"40":157,"45":152,"50":144,"55":138,"60":130,"65":122,"70":113,"75":103,"80":94,"85":84,"90":73,"95":62,"100":50},"-175":{"0":125,"5":150,"10":161,"15":167,"20":169,"25":168,"30":166,"35":163,"40":158,"45":152,"50":145,"55":138,"60":130,"65":122,"70":113,"75":104,"80":94,"85":83,"90":73,"95":62,"100":50},"-170":{"0":128,"5":153,"10":164,"15":169,"20":170,"25":170,"30":167,"35":163,"40":158,"45":153,"50":146,"55":138,"60":131,"65":122,"70":113,"75":103,"80":94,"85":84,"90":73,"95":62,"100":50},"-165":{"0":132,"5":156,"10":166,"15":171,"20":172,"25":171,"30":169,"35":164,"40":159,"45":153,"50":147,"55":139,"60":131,"65":122,"70":113,"75":103,"80":94,"85":84,"90":73,"95":62,"100":50},"-160":{"0":135,"5":159,"10":170,"15":173,"20":174,"25":172,"30":170,"35":165,"40":160,"45":154,"50":147,"55":139,"60":132,"65":123,"70":113,"75":104,"80":94,"85":84,"90":73,"95":62,"100":50},"-155":{"0":138,"5":163,"10":172,"15":176,"20":176,"25":174,"30":171,"35":167,"40":161,"45":154,"50":148,"55":140,"60":132,"65":123,"70":113,"75":104,"80":94,"85":84,"90":73,"95":62,"100":50},"-150":{"0":142,"5":166,"10":175,"15":178,"20":178,"25":176,"30":172,"35":168,"40":162,"45":155,"50":148,"55":140,"60":132,"65":123,"70":113,"75":104,"80":94,"85":84,"90":73,"95":62,"100":50},"-145":{"0":146,"5":169,"10":178,"15":180,"20":179,"25":177,"30":174,"35":169,"40":163,"45":156,"50":149,"55":140,"60":133,"65":123,"70":114,"75":105,"80":94,"85":84,"90":73,"95":62,"100":50},"-140":{"0":150,"5":173,"10":180,"15":182,"20":181,"25":179,"30":175,"35":170,"40":164,"45":157,"50":149,"55":141,"60":133,"65":123,"70":114,"75":104,"80":94,"85":84,"90":73,"95":62,"100":50},"-135":{"0":155,"5":176,"10":183,"15":184,"20":183,"25":180,"30":176,"35":170,"40":164,"45":158,"50":150,"55":141,"60":133,"65":124,"70":114,"75":105,"80":94,"85":84,"90":73,"95":62,"100":50},"-130":{"0":159,"5":180,"10":185,"15":187,"20":185,"25":181,"30":177,"35":171,"40":165,"45":158,"50":150,"55":142,"60":133,"65":124,"70":114,"75":105,"80":94,"85":84,"90":73,"95":62,"100":50},"-125":{"0":164,"5":183,"10":188,"15":189,"20":187,"25":183,"30":179,"35":173,"40":166,"45":159,"50":151,"55":143,"60":134,"65":124,"70":114,"75":104,"80":95,"85":84,"90":73,"95":62,"100":50},"-120":{"0":168,"5":186,"10":191,"15":191,"20":189,"25":185,"30":180,"35":174,"40":167,"45":160,"50":151,"55":143,"60":134,"65":124,"70":114,"75":105,"80":95,"85":84,"90":73,"95":62,"100":50},"-115":{"0":173,"5":190,"10":194,"15":193,"20":191,"25":186,"30":181,"35":175,"40":168,"45":160,"50":152,"55":144,"60":134,"65":125,"70":115,"75":105,"80":95,"85":84,"90":73,"95":62,"100":50},"-110":{"0":178,"5":193,"10":196,"15":195,"20":192,"25":188,"30":182,"35":176,"40":168,"45":161,"50":152,"55":144,"60":134,"65":125,"70":115,"75":105,"80":95,"85":84,"90":73,"95":62,"100":50},"-105":{"0":183,"5":196,"10":199,"15":198,"20":194,"25":190,"30":183,"35":177,"40":170,"45":161,"50":152,"55":144,"60":135,"65":125,"70":115,"75":105,"80":95,"85":84,"90":73,"95":62,"100":50},"-100":{"0":187,"5":200,"10":202,"15":200,"20":196,"25":191,"30":185,"35":178,"40":171,"45":162,"50":154,"55":145,"60":135,"65":125,"70":116,"75":106,"80":95,"85":84,"90":73,"95":62,"100":50},"-95":{"0":192,"5":203,"10":204,"15":202,"20":198,"25":192,"30":186,"35":179,"40":171,"45":163,"50":154,"55":145,"60":135,"65":125,"70":115,"75":106,"80":95,"85":84,"90":73,"95":62,"100":50},"-90":{"0":196,"5":207,"10":207,"15":204,"20":199,"25":194,"30":187,"35":180,"40":172,"45":163,"50":155,"55":145,"60":136,"65":126,"70":116,"75":106,"80":95,"85":84,"90":73,"95":62,"100":50},"-85":{"0":201,"5":210,"10":210,"15":207,"20":202,"25":195,"30":188,"35":181,"40":173,"45":164,"50":155,"55":146,"60":136,"65":126,"70":116,"75":106,"80":95,"85":84,"90":73,"95":62,"100":50},"-80":{"0":206,"5":213,"10":212,"15":209,"20":203,"25":197,"30":190,"35":182,"40":174,"45":165,"50":156,"55":146,"60":136,"65":126,"70":116,"75":106,"80":95,"85":84,"90":73,"95":62,"100":50},"-75":{"0":211,"5":217,"10":215,"15":210,"20":205,"25":199,"30":191,"35":183,"40":174,"45":165,"50":157,"55":147,"60":137,"65":126,"70":117,"75":106,"80":95,"85":84,"90":73,"95":62,"100":50},"-70":{"0":215,"5":220,"10":218,"15":213,"20":207,"25":200,"30":192,"35":184,"40":175,"45":167,"50":157,"55":147,"60":137,"65":127,"70":116,"75":106,"80":95,"85":84,"90":73,"95":62,"100":50},"-65":{"0":219,"5":223,"10":220,"15":215,"20":209,"25":201,"30":194,"35":185,"40":176,"45":167,"50":158,"55":147,"60":137,"65":127,"70":117,"75":106,"80":95,"85":84,"90":73,"95":62,"100":50},"-60":{"0":224,"5":227,"10":223,"15":217,"20":211,"25":203,"30":195,"35":186,"40":177,"45":168,"50":158,"55":148,"60":137,"65":127,"70":117,"75":106,"80":96,"85":84,"90":73,"95":62,"100":50},"-55":{"0":228,"5":230,"10":226,"15":220,"20":212,"25":205,"30":196,"35":187,"40":178,"45":169,"50":158,"55":148,"60":138,"65":128,"70":117,"75":106,"80":95,"85":84,"90":73,"95":62,"100":50},"-50":{"0":233,"5":233,"10":228,"15":222,"20":214,"25":206,"30":197,"35":188,"40":179,"45":169,"50":159,"55":149,"60":138,"65":128,"70":117,"75":107,"80":96,"85":84,"90":73,"95":62,"100":50},"-45":{"0":238,"5":237,"10":231,"15":224,"20":217,"25":208,"30":198,"35":190,"40":180,"45":170,"50":159,"55":149,"60":138,"65":128,"70":118,"75":107,"80":96,"85":84,"90":73,"95":62,"100":50},"-40":{"0":242,"5":240,"10":234,"15":226,"20":218,"25":209,"30":200,"35":191,"40":181,"45":170,"50":160,"55":149,"60":139,"65":129,"70":118,"75":107,"80":96,"85":85,"90":73,"95":62,"100":50},"-35":{"0":247,"5":244,"10":236,"15":229,"20":220,"25":211,"30":202,"35":192,"40":182,"45":171,"50":161,"55":150,"60":140,"65":129,"70":118,"75":107,"80":96,"85":85,"90":73,"95":62,"100":50},"-30":{"0":251,"5":247,"10":239,"15":231,"20":222,"25":212,"30":203,"35":193,"40":182,"45":172,"50":161,"55":150,"60":140,"65":129,"70":118,"75":107,"80":96,"85":85,"90":73,"95":62,"100":50},"-25":{"0":256,"5":250,"10":242,"15":233,"20":223,"25":214,"30":204,"35":194,"40":183,"45":172,"50":161,"55":151,"60":141,"65":130,"70":118,"75":107,"80":96,"85":85,"90":73,"95":62,"100":50},"-20":{"0":260,"5":254,"10":245,"15":235,"20":226,"25":216,"30":205,"35":195,"40":184,"45":173,"50":162,"55":151,"60":141,"65":130,"70":119,"75":107,"80":96,"85":85,"90":74,"95":62,"100":50},"-15":{"0":265,"5":257,"10":247,"15":238,"20":228,"25":217,"30":206,"35":195,"40":184,"45":174,"50":162,"55":151,"60":141,"65":130,"70":119,"75":108,"80":96,"85":85,"90":73,"95":62,"100":50},"-10":{"0":269,"5":260,"10":251,"15":240,"20":229,"25":218,"30":207,"35":196,"40":185,"45":174,"50":164,"55":153,"60":142,"65":130,"70":119,"75":108,"80":96,"85":85,"90":73,"95":62,"100":50},"-5":{"0":274,"5":264,"10":253,"15":242,"20":231,"25":220,"30":209,"35":197,"40":186,"45":175,"50":164,"55":153,"60":142,"65":130,"70":119,"75":108,"80":96,"85":85,"90":73,"95":62,"100":50}};

	// 间隔 5*5
	var data = {"0":[280,-1,275,1,271,3,266,5,262,7,257,9,252,11,248,13,243,15,239,17,234,19,230,21,225,23,220,25,216,27,211,29,207,31,202,33,198,35,193,37,188,39,184,41,179,43,175,45,170,47,165,49,161,51,156,53,152,55,147,57,143,59,138,61,133,63,129,65,124,67,120,69,115,71,111,73,106,75,101,77,97,79,92,81,88,83,83,85,78,87,74,89,69,91,65,94,60,96,56,98,51,100,54,100],"5":[285,-1,280,1,276,2,271,4,266,6,262,8,257,10,253,12,248,14,243,16,239,18,234,20,229,22,225,24,220,26,216,28,211,30,207,32,202,34,197,36,193,38,188,40,184,42,179,44,174,46,170,48,165,50,161,52,156,54,151,56,147,58,142,60,138,62,133,64,129,66,124,68,119,70,115,72,110,74,106,76,101,78,97,80,92,82,87,84,83,86,78,88,74,90,69,92,64,94,60,96,55,98,51,100],"10":[290,-1,285,0,280,2,276,4,271,6,266,7,262,9,257,11,253,13,248,15,243,17,239,19,234,21,229,23,225,25,220,27,216,28,211,30,206,32,202,34,197,36,193,38,188,40,183,42,179,44,174,46,170,48,165,50,160,52,156,54,151,56,147,58,142,60,137,62,133,64,128,66,124,68,119,70,114,72,110,74,105,76,101,78,96,80,92,82,87,84,82,86,78,88,73,90,69,92,64,94,60,96,55,98,50,100,55,100],"15":[295,-1,290,0,285,2,281,3,276,5,271,7,267,8,262,10,257,12,253,14,248,16,243,18,239,20,234,21,229,23,225,25,220,27,215,29,211,31,206,33,202,35,197,37,193,39,188,41,183,43,179,45,174,46,169,48,165,50,160,52,156,54,151,56,146,58,142,60,137,62,133,64,128,66,123,68,119,70,114,72,110,74,105,76,101,78,96,80,91,82,87,84,82,86,78,88,73,90,68,92,64,94,59,96,55,98,50,100],"20":[300,-1,295,0,290,1,285,3,281,4,276,6,271,8,267,9,262,11,257,13,253,15,248,17,243,18,239,20,234,22,229,24,225,26,220,28,215,30,211,31,206,33,202,35,197,37,192,39,188,41,183,43,178,45,174,47,169,49,165,51,160,53,155,55,151,57,146,58,142,60,137,62,132,64,128,66,123,68,119,70,114,72,109,74,105,76,100,78,96,80,91,82,86,84,82,86,77,88,73,90,68,92,64,94,59,96,54,98,50,100],"25":[305,-1,300,0,295,1,290,2,286,4,281,5,276,7,271,9,267,10,262,12,257,14,253,16,248,17,243,19,239,21,234,23,229,25,225,26,220,28,215,30,211,32,206,34,201,36,197,38,192,40,188,41,183,43,178,45,174,47,169,49,164,51,160,53,155,55,151,57,146,59,141,61,137,63,132,65,128,67,123,68,118,70,114,72,109,74,105,76,100,78,95,80,91,82,86,84,82,86,77,88,73,90,68,92,63,94,59,96,54,98,50,100,55,100],"30":[310,-1,305,0,300,1,295,2,290,3,286,5,281,6,276,8,271,10,267,11,262,13,257,15,253,16,248,18,243,20,239,22,234,23,229,25,225,27,220,29,215,31,211,32,206,34,201,36,197,38,192,40,188,42,183,44,178,46,174,47,169,49,164,51,160,53,155,55,150,57,146,59,141,61,137,63,132,65,127,67,123,69,118,71,114,73,109,75,104,77,100,78,95,80,91,82,86,84,81,86,77,88,72,90,68,92,63,94,59,96,54,98],"35":[315,-1,310,-1,305,0,300,2,295,3,291,4,286,6,281,7,276,9,272,10,267,12,262,14,257,15,253,17,248,19,243,20,239,22,234,24,229,26,225,28,220,29,215,31,211,33,206,35,201,37,197,38,192,40,187,42,183,44,178,46,173,48,169,50,164,52,160,53,155,55,150,57,146,59,141,61,137,63,132,65,127,67,123,69,118,71,113,73,109,75,104,77,100,79,95,81,90,83,86,84,81,86,77,88,72,90,67,92,63,94,58,96,54,98],"40":[320,-1,315,-1,310,0,305,1,300,2,295,4,291,5,286,7,281,8,276,10,272,11,267,13,262,14,257,16,253,18,248,19,243,21,239,23,234,25,229,26,225,28,220,30,215,32,211,33,206,35,201,37,197,39,192,41,187,43,183,44,178,46,173,48,169,50,164,52,159,54,155,56,150,58,146,59,141,61,136,63,132,65,127,67,122,69,118,71,113,73,109,75,104,77,99,79,95,81,90,83,86,85,81,87,76,89,72,91,67,93,63,94,58,96,54,98],"45":[325,-1,320,-1,315,0,310,1,305,2,300,3,296,5,291,6,286,7,281,9,276,10,272,12,267,14,262,15,257,17,253,18,248,20,243,22,239,23,234,25,229,27,224,29,220,30,215,32,210,34,206,36,201,38,197,39,192,41,187,43,182,45,178,47,173,48,169,50,164,52,159,54,155,56,150,58,145,60,141,62,136,64,132,65,127,67,122,69,118,71,113,73,108,75,104,77,99,79,95,81,90,83,85,85,81,87,76,89,72,91,67,93,62,95,58,97,53,99,51,100],"50":[330,-1,325,-1,320,0,315,1,310,2,305,3,300,4,296,5,291,7,286,8,281,10,277,11,272,13,267,14,262,16,257,17,253,19,248,21,243,22,239,24,234,26,229,27,224,29,220,31,215,33,210,34,206,36,201,38,196,40,192,41,187,43,182,45,178,47,173,49,168,51,164,52,159,54,154,56,150,58,145,60,141,62,136,64,131,66,127,67,122,69,118,71,113,73,108,75,104,77,99,79,94,81,90,83,85,85,81,87,76,89,71,91,67,93,62,95,58,97,53,99,52,100],"55":[335,-1,330,-1,325,0,320,1,315,2,310,3,305,4,301,5,296,6,291,8,286,9,281,10,277,12,272,13,267,15,262,16,257,18,253,20,248,21,243,23,239,25,234,26,229,28,224,30,220,31,215,33,210,35,206,37,201,38,196,40,192,42,187,44,182,45,178,47,173,49,168,51,164,53,159,55,154,56,150,58,145,60,140,62,136,64,131,66,127,68,122,70,117,71,113,73,108,75,103,77,99,79,94,81,90,83,85,85,81,87,76,89,71,91,67,93,62,95,57,97,53,99,52,100],"60":[340,-1,335,-1,330,0,325,0,320,1,315,2,310,3,305,4,301,6,296,7,291,8,286,10,281,11,277,13,272,14,267,16,262,17,257,19,253,20,248,22,243,23,239,25,234,27,229,28,224,30,220,32,215,33,210,35,206,37,201,39,196,40,192,42,187,44,182,46,178,48,173,49,168,51,164,53,159,55,154,57,150,59,145,60,140,62,136,64,131,66,127,68,122,70,117,72,113,73,108,75,103,77,99,79,94,81,90,83,85,85,80,87,76,89,71,91,66,93,62,95,57,97,53,99,52,100],"65":[345,-1,340,-1,335,0,330,0,325,1,320,2,315,3,310,4,306,5,301,6,296,8,291,9,286,10,281,12,277,13,272,15,267,16,262,18,258,19,253,21,248,22,243,24,238,26,234,27,229,29,224,31,220,32,215,34,210,36,206,37,201,39,196,41,191,43,187,44,182,46,177,48,173,50,168,51,163,53,159,55,154,57,149,59,145,61,140,62,136,64,131,66,126,68,122,70,117,72,112,74,108,76,103,77,99,79,94,81,89,83,85,85,80,87,76,89,71,91,66,93,62,95,57,97,53,99],"70":[350,-1,345,-1,340,0,335,0,330,1,325,2,320,3,315,4,310,5,306,6,301,7,296,8,291,10,286,11,281,12,277,14,272,15,267,17,262,18,258,20,253,21,248,23,243,24,239,26,234,28,229,29,224,31,220,33,215,34,210,36,206,38,201,39,196,41,191,43,187,45,182,46,177,48,173,50,168,52,163,53,159,55,154,57,149,59,145,61,140,63,135,64,131,66,126,68,122,70,117,72,112,74,108,76,103,78,98,79,94,81,89,83,85,85,80,87,75,89,71,91,66,93,62,95,57,97,52,99],"75":[355,-1,350,-1,345,0,340,0,335,1,330,1,325,2,320,3,315,4,311,6,306,7,301,8,296,9,291,10,286,12,282,13,277,14,272,16,267,17,262,19,258,20,253,22,248,23,243,25,239,27,234,28,229,30,224,31,220,33,215,35,210,36,206,38,201,40,196,41,191,43,187,45,182,47,177,48,173,50,168,52,163,54,159,56,154,57,149,59,145,61,140,63,135,65,131,66,126,68,121,70,117,72,112,74,107,76,103,78,98,80,94,81,89,83,84,85,80,87,75,89,71,91,66,93,61,95,57,97,52,99,53,100],"80":[360,-1,355,-1,350,-1,345,0,340,1,335,1,330,2,325,3,320,4,315,5,311,6,306,7,301,9,296,10,291,11,286,12,281,14,277,15,272,16,267,18,262,19,258,21,253,22,248,24,243,25,239,27,234,29,229,30,224,32,220,33,215,35,210,37,205,38,201,40,196,42,191,43,187,45,182,47,177,49,173,50,168,52,163,54,159,56,154,58,149,59,145,61,140,63,135,65,131,67,126,68,121,70,117,72,112,74,107,76,103,78,98,80,94,82,89,84,84,85,80,87,75,89,70,91,66,93,61,95,57,97,52,99],"85":[365,-1,360,-1,355,-1,350,0,345,0,340,1,335,2,330,3,325,4,320,5,316,6,311,7,306,8,301,9,296,10,291,12,286,13,282,14,277,16,272,17,267,18,262,20,258,21,253,23,248,24,243,26,239,27,234,29,229,31,224,32,220,34,215,35,210,37,205,39,201,40,196,42,191,44,187,45,182,47,177,49,172,51,168,52,163,54,158,56,154,58,149,60,144,61,140,63,135,65,131,67,126,69,121,70,117,72,112,74,107,76,103,78,98,80,93,82,89,84,84,86,80,87,75,89,70,91,66,93,61,95,57,97,52,99,53,100],"90":[370,-1,365,-1,360,-1,355,0,350,0,345,1,340,2,335,2,330,3,325,4,320,5,315,6,311,7,306,9,301,10,296,11,291,12,286,14,282,15,277,16,272,18,267,19,262,20,258,22,253,23,248,25,243,26,239,28,234,29,229,31,224,33,220,34,215,36,210,37,205,39,201,41,196,42,191,44,187,46,182,47,177,49,172,51,168,53,163,54,158,56,154,58,149,60,144,61,140,63,135,65,130,67,126,69,121,71,116,72,112,74,107,76,102,78,98,80,93,82,89,84,84,86,79,88,75,89,70,91,66,93,61,95,56,97,52,99,53,100],"95":[375,-1,370,-1,365,-1,360,0,355,0,350,1,345,1,340,2,335,3,330,4,325,5,320,6,316,7,311,8,306,9,301,10,296,12,291,13,286,14,282,15,277,17,272,18,267,20,262,21,258,22,253,24,248,25,243,27,239,28,234,30,229,31,224,33,220,35,215,36,210,38,205,39,201,41,196,43,191,44,186,46,182,48,177,49,172,51,168,53,163,55,158,56,154,58,149,60,144,62,140,63,135,65,130,67,126,69,121,71,116,73,112,74,107,76,102,78,98,80,93,82,89,84,84,86,79,88,75,90,70,91,65,93,61,95,56,97,52,99],"100":[380,-1,375,-1,370,-1,365,0,360,0,355,1,350,1,345,2,340,3,335,4,330,5,325,6,321,7,316,8,311,9,306,10,301,11,296,12,291,13,286,15,282,16,277,17,272,19,267,20,262,21,258,23,253,24,248,26,243,27,238,29,234,30,229,32,224,33,219,35,215,37,210,38,205,40,201,41,196,43,191,45,186,46,182,48,177,50,172,51,168,53,163,55,158,57,154,58,149,60,144,62,139,64,135,65,130,67,125,69,121,71,116,73,112,75,107,76,102,78,98,80,93,82,88,84,84,86,79,88,75,90,70,92,65,93,61,95,56,97,52,99,53,100],"105":[385,-1,380,-1,375,-1,370,0,365,0,360,1,355,1,350,2,345,3,340,3,335,4,330,5,325,6,321,7,316,8,311,9,306,10,301,12,296,13,291,14,287,15,282,17,277,18,272,19,267,21,262,22,258,23,253,25,248,26,243,28,238,29,234,31,229,32,224,34,219,35,215,37,210,38,205,40,200,42,196,43,191,45,186,47,182,48,177,50,172,52,167,53,163,55,158,57,153,59,149,60,144,62,139,64,135,66,130,67,125,69,121,71,116,73,111,75,107,76,102,78,98,80,93,82,88,84,84,86,79,88,74,90,70,92,65,94,61,95,56,97,51,99,53,100],"110":[390,-1,385,-1,380,-1,375,0,370,0,365,0,360,1,355,2,350,2,345,3,340,4,335,5,330,6,325,7,321,8,316,9,311,10,306,11,301,12,296,13,291,15,287,16,282,17,277,18,272,20,267,21,262,22,258,24,253,25,248,27,243,28,239,30,234,31,229,33,224,34,219,36,215,37,210,39,205,40,200,42,196,44,191,45,186,47,182,49,177,50,172,52,167,54,163,55,158,57,153,59,149,60,144,62,139,64,135,66,130,68,125,69,121,71,116,73,111,75,107,77,102,78,97,80,93,82,88,84,84,86,79,88,74,90,70,92,65,94,60,96,56,97,51,99,54,100],"115":[395,-1,390,-1,385,-1,380,0,375,0,370,0,365,1,360,1,355,2,350,3,345,4,340,4,335,5,330,6,326,7,321,8,316,9,311,10,306,12,301,13,296,14,291,15,287,16,282,18,277,19,272,20,267,22,263,23,258,24,253,26,248,27,243,29,238,30,234,31,229,33,224,34,219,36,215,38,210,39,205,41,200,42,196,44,191,45,186,47,182,49,177,50,172,52,167,54,163,55,158,57,153,59,149,61,144,62,139,64,134,66,130,68,125,69,121,71,116,73,111,75,107,77,102,79,97,80,93,82,88,84,83,86,79,88,74,90,70,92,65,94,60,96,56,98,51,100,54,100],"120":[400,-1,395,-1,390,-1,385,-1,380,0,375,0,370,1,365,1,360,2,355,3,350,3,345,4,340,5,335,6,330,7,326,8,321,9,316,10,311,11,306,12,301,13,296,14,291,16,287,17,282,18,277,19,272,21,267,22,262,23,258,25,253,26,248,27,243,29,238,30,234,32,229,33,224,35,219,36,215,38,210,39,205,41,200,43,196,44,191,46,186,47,181,49,177,51,172,52,167,54,163,56,158,57,153,59,148,61,144,63,139,64,134,66,130,68,125,70,120,71,116,73,111,75,106,77,102,79,97,80,93,82,88,84,83,86,79,88,74,90,69,92,65,94,60,96,56,98,51,100,54,100],"125":[405,-1,400,-1,395,-1,390,-1,385,0,380,0,375,1,370,1,365,2,360,2,355,3,350,4,345,5,340,6,335,6,330,7,326,8,321,9,316,10,311,11,306,13,301,14,296,15,291,16,287,17,282,19,277,20,272,21,267,22,262,24,258,25,253,26,248,28,243,29,238,31,234,32,229,34,224,35,219,37,215,38,210,40,205,41,200,43,196,44,191,46,186,48,181,49,177,51,172,53,167,54,162,56,158,58,153,59,148,61,144,63,139,64,134,66,130,68,125,70,120,71,116,73,111,75,106,77,102,79,97,81,92,82,88,84,83,86,79,88,74,90,69,92,65,94,60,96,55,98,51,100,54,100],"130":[410,-1,405,-1,400,-1,395,-1,390,0,385,0,380,1,375,1,370,2,365,2,360,3,355,4,350,4,345,5,340,6,335,7,331,8,326,9,321,10,316,11,311,12,306,13,301,14,296,15,292,17,287,18,282,19,277,20,272,22,267,23,262,24,258,26,253,27,248,28,243,30,238,31,234,33,229,34,224,35,219,37,215,38,210,40,205,42,200,43,196,45,191,46,186,48,181,49,177,51,172,53,167,54,162,56,158,58,153,59,148,61,144,63,139,65,134,66,130,68,125,70,120,72,116,73,111,75,106,77,102,79,97,81,92,82,88,84,83,86,78,88,74,90,69,92,65,94,60,96,55,98,51,100,54,100],"135":[415,-1,410,-1,405,-1,400,-1,395,0,390,0,385,0,380,1,375,1,370,2,365,3,360,3,355,4,350,5,345,6,340,7,336,7,331,8,326,9,321,10,316,11,311,13,306,14,301,15,296,16,292,17,287,18,282,19,277,21,272,22,267,23,263,25,258,26,253,27,248,29,243,30,238,31,234,33,229,34,224,36,219,37,215,39,210,40,205,42,200,43,196,45,191,47,186,48,181,50,177,51,172,53,167,55,162,56,158,58,153,60,148,61,144,63,139,65,134,66,129,68,125,70,120,72,115,73,111,75,106,77,102,79,97,81,92,83,88,84,83,86,78,88,74,90,69,92,64,94,60,96,55,98,51,100,54,100],"140":[420,-1,415,-1,410,-1,405,-1,400,0,395,0,390,0,385,1,380,1,375,2,370,3,365,3,360,4,355,5,350,5,345,6,340,7,335,8,331,9,326,10,321,11,316,12,311,13,306,14,301,15,296,16,292,18,287,19,282,20,277,21,272,22,267,24,263,25,258,26,253,28,248,29,243,30,238,32,234,33,229,35,224,36,219,38,214,39,210,41,205,42,200,44,196,45,191,47,186,48,181,50,177,52,172,53,167,55,162,56,158,58,153,60,148,61,143,63,139,65,134,67,129,68,125,70,120,72,115,74,111,75,106,77,101,79,97,81,92,83,87,84,83,86,78,88,74,90,69,92,64,94,60,96,55,98,51,100],"145":[425,-1,420,-1,415,-1,410,-1,405,0,400,0,395,0,390,1,385,1,380,2,375,2,370,3,365,4,360,4,355,5,350,6,345,7,341,8,336,9,331,9,326,10,321,11,316,12,311,13,306,15,301,16,296,17,292,18,287,19,282,20,277,22,272,23,267,24,263,25,258,27,253,28,248,29,243,31,238,32,234,34,229,35,224,36,219,38,214,39,210,41,205,42,200,44,195,45,191,47,186,49,181,50,176,52,172,53,167,55,162,57,158,58,153,60,148,62,143,63,139,65,134,67,129,68,125,70,120,72,115,74,111,75,106,77,101,79,97,81,92,83,87,85,83,86,78,88,73,90,69,92,64,94,60,96,55,98,50,100,55,100],"150":[430,-1,425,-1,420,-1,415,-1,410,0,405,0,400,0,395,1,390,1,385,2,380,2,375,3,370,3,365,4,360,5,355,6,350,6,345,7,340,8,336,9,331,10,326,11,321,12,316,13,311,14,306,15,301,16,297,17,292,18,287,20,282,21,277,22,272,23,267,25,262,26,258,27,253,28,248,30,243,31,238,33,234,34,229,35,224,37,219,38,215,40,210,41,205,43,200,44,195,46,191,47,186,49,181,50,176,52,172,54,167,55,162,57,158,58,153,60,148,62,143,63,139,65,134,67,129,69,125,70,120,72,115,74,111,76,106,77,101,79,97,81,92,83,87,85,83,86,78,88,73,90,69,92,64,94,59,96,55,98,50,100],"155":[435,-1,430,-1,425,-1,420,-1,415,0,410,0,405,0,400,1,395,1,390,1,385,2,380,3,375,3,370,4,365,5,360,5,355,6,350,7,345,8,340,9,336,9,331,10,326,11,321,12,316,13,311,14,306,15,301,17,296,18,292,19,287,20,282,21,277,22,272,24,267,25,262,26,258,27,253,29,248,30,243,31,238,33,234,34,229,36,224,37,219,38,215,40,210,41,205,43,200,44,195,46,191,47,186,49,181,51,176,52,172,54,167,55,162,57,157,59,153,60,148,62,143,64,139,65,134,67,129,69,125,70,120,72,115,74,110,76,106,77,101,79,96,81,92,83,87,85,83,87,78,88,73,90,69,92,64,94,59,96,55,98,50,100],"160":[440,-1,435,-1,430,-1,425,-1,420,-1,415,0,410,0,405,0,400,1,395,1,390,2,385,2,380,3,375,4,370,4,365,5,360,6,355,7,350,7,346,8,341,9,336,10,331,11,326,12,321,13,316,14,311,15,306,16,301,17,297,18,292,19,287,20,282,22,277,23,272,24,267,25,263,27,258,28,253,29,248,30,243,32,238,33,234,35,229,36,224,37,219,39,214,40,210,42,205,43,200,45,195,46,191,48,186,49,181,51,176,52,172,54,167,56,162,57,157,59,153,60,148,62,143,64,138,65,134,67,129,69,124,71,120,72,115,74,110,76,106,78,101,79,96,81,92,83,87,85,82,87,78,88,73,90,68,92,64,94,59,96,55,98,50,100,55,100,60,100,65,100,70,100],"165":[445,-1,440,-1,435,-1,430,-1,425,-1,420,0,415,0,410,0,405,1,400,1,395,2,390,2,385,3,380,3,375,4,370,5,365,5,360,6,355,7,350,8,346,9,341,10,336,10,331,11,326,12,321,13,316,14,311,15,306,16,301,17,297,19,292,20,287,21,282,22,277,23,272,24,267,26,263,27,258,28,253,29,248,31,243,32,238,33,234,35,229,36,224,38,219,39,214,40,210,42,205,43,200,45,195,46,191,48,186,49,181,51,176,53,172,54,167,56,162,57,157,59,153,61,148,62,143,64,138,66,134,67,129,69,124,71,120,72,115,74,110,76,106,78,101,79,96,81,92,83,87,85,82,87,78,89,73,90,68,92,64,94,59,96,55,98,50,100,55,100],"170":[450,-1,445,-1,440,-1,435,-1,430,-1,425,0,420,0,415,0,410,1,405,1,400,2,395,2,390,3,385,3,380,4,375,4,370,5,365,6,360,7,355,7,351,8,345,9,341,10,336,11,331,12,326,13,321,14,316,15,311,16,306,17,301,18,297,19,292,20,287,21,282,22,277,24,272,25,267,26,263,27,258,29,253,30,248,31,243,32,238,34,234,35,229,37,224,38,219,39,214,41,210,42,205,44,200,45,195,47,190,48,186,50,181,51,176,53,171,54,167,56,162,57,157,59,153,61,148,62,143,64,138,66,134,67,129,69,124,71,120,72,115,74,110,76,106,78,101,79,96,81,92,83,87,85,82,87,78,89,73,90,68,92,64,94,59,96,54,98,50,100],"175":[455,-1,450,-1,445,-1,440,-1,435,-1,430,0,425,0,420,0,415,1,410,1,405,1,400,2,395,2,390,3,385,4,380,4,375,5,370,6,365,6,360,7,355,8,350,9,346,10,341,10,336,11,331,12,326,13,321,14,316,15,311,16,306,17,301,18,297,19,292,21,287,22,282,23,277,24,272,25,267,26,263,28,258,29,253,30,248,31,243,33,238,34,234,35,229,37,224,38,219,40,214,41,210,42,205,44,200,45,195,47,191,48,186,50,181,51,176,53,171,54,167,56,162,58,157,59,152,61,148,62,143,64,138,66,134,67,129,69,124,71,119,73,115,74,110,76,105,78,101,80,96,81,91,83,87,85,82,87,77,89,73,90,68,92,64,94,59,96,54,98],"180":[460,-1,455,-1,450,-1,445,-1,440,-1,435,0,430,0,425,0,420,1,415,1,410,1,405,2,400,2,395,3,390,3,385,4,380,5,375,5,370,6,365,7,360,8,355,8,351,9,346,10,341,11,336,12,331,13,326,14,321,15,316,16,311,17,306,18,302,19,297,20,292,21,287,22,282,23,277,24,272,26,267,27,263,28,258,29,253,30,248,32,243,33,238,34,234,36,229,37,224,39,219,40,214,41,210,43,205,44,200,46,195,47,190,49,186,50,181,52,176,53,171,55,167,56,162,58,157,59,152,61,148,63,143,64,138,66,134,68,129,69,124,71,119,73,115,74,110,76,105,78,101,80,96,81,91,83,87,85,82,87,77,89,73,91,68,92,64,94,59,96,54,98,50,100],"185":[465,-1,460,-1,455,-1,450,-1,445,-1,440,0,435,0,430,0,425,0,420,1,415,1,410,2,405,2,400,3,395,3,390,4,385,4,380,5,375,6,370,6,365,7,360,8,356,9,351,10,346,10,341,11,336,12,331,13,326,14,321,15,316,16,311,17,306,18,302,19,297,20,292,21,287,22,282,24,277,25,272,26,267,27,263,28,258,30,253,31,248,32,243,33,238,35,234,36,229,37,224,39,219,40,214,42,210,43,205,44,200,46,195,47,190,49,186,50,181,52,176,53,171,55,167,56,162,58,157,60,152,61,148,63,143,64,138,66,133,68,129,69,124,71,119,73,115,74,110,76,105,78,101,80,96,81,91,83,87,85,82,87,77,89,73,91,68,92,63,94,59,96,54,98,50,100,55,100],"190":[470,-1,465,-1,460,-1,455,-1,450,-1,445,0,440,0,435,0,430,0,425,1,420,1,415,2,410,2,405,3,400,3,395,4,390,4,385,5,380,5,375,6,370,7,365,8,360,8,356,9,351,10,346,11,341,12,336,13,331,13,326,14,321,15,316,16,311,17,306,18,302,19,297,21,292,22,287,23,282,24,277,25,272,26,267,27,263,29,258,30,253,31,248,32,243,34,238,35,234,36,229,38,224,39,219,40,214,42,210,43,205,45,200,46,195,48,190,49,186,50,181,52,176,54,171,55,167,57,162,58,157,60,152,61,148,63,143,65,138,66,133,68,129,69,124,71,119,73,115,75,110,76,105,78,101,80,96,82,91,83,87,85,82,87,77,89,73,91,68,93,63,94,59,96,54,98,51,100,56,100],"195":[475,-1,470,-1,465,-1,460,-1,455,-1,450,0,445,0,440,0,435,0,430,1,425,1,420,1,415,2,410,2,405,3,400,3,395,4,390,5,385,5,380,6,375,7,370,7,365,8,360,9,356,10,351,10,346,11,341,12,336,13,331,14,326,15,321,16,316,17,311,18,306,19,302,20,297,21,292,22,287,23,282,24,277,25,272,27,267,28,263,29,258,30,253,31,248,33,243,34,238,35,234,37,229,38,224,39,219,41,214,42,210,43,205,45,200,46,195,48,190,49,186,51,181,52,176,54,171,55,167,57,162,58,157,60,152,61,148,63,143,65,138,66,133,68,129,70,124,71,119,73,115,75,110,76,105,78,101,80,96,82,91,83,86,85,82,87,77,89,73,91,68,93,63,94,59,96,54,98,51,100],"200":[480,-1,475,-1,470,-1,465,-1,460,-1,455,0,450,0,445,0,440,0,435,1,430,1,425,1,420,2,415,2,410,3,405,3,400,4,395,4,390,5,385,6,380,6,375,7,370,8,365,8,361,9,355,10,351,11,346,12,341,13,336,13,331,14,326,15,321,16,316,17,311,18,306,19,302,20,297,21,292,22,287,24,282,25,277,26,272,27,267,28,263,29,258,31,253,32,248,33,243,34,238,36,234,37,229,38,224,40,219,41,214,42,209,44,205,45,200,46,195,48,190,49,186,51,181,52,176,54,171,55,166,57,162,58,157,60,152,62,148,63,143,65,138,66,133,68,129,70,124,71,119,73,114,75,110,76,105,78,100,80,96,82,91,83,86,85,82,87,77,89,72,91,68,93,63,94,59,96,54,98,51,100],"205":[485,-1,480,-1,475,-1,470,-1,465,-1,460,-1,455,0,450,0,445,0,440,1,435,1,430,1,425,2,420,2,415,3,410,3,405,4,400,4,395,5,390,5,385,6,380,7,375,7,370,8,365,9,360,10,356,10,351,11,346,12,341,13,336,14,331,15,326,16,321,17,316,18,311,19,306,20,302,21,297,22,292,23,287,24,282,25,277,26,272,27,267,28,263,30,258,31,253,32,248,33,243,35,238,36,234,37,229,38,224,40,219,41,214,43,209,44,205,45,200,47,195,48,190,50,186,51,181,53,176,54,171,56,166,57,162,59,157,60,152,62,147,63,143,65,138,67,133,68,129,70,124,71,119,73,114,75,110,77,105,78,100,80,96,82,91,84,86,85,82,87,77,89,72,91,68,93,63,95,58,96,54,98],"210":[490,-1,485,-1,480,-1,475,-1,470,-1,465,-1,460,0,455,0,450,0,445,0,440,1,435,1,430,2,425,2,420,2,415,3,410,3,405,4,400,5,395,5,390,6,385,6,380,7,375,8,370,8,366,9,361,10,356,11,351,12,346,12,341,13,336,14,331,15,326,16,321,17,316,18,311,19,306,20,302,21,297,22,292,23,287,24,282,25,277,26,272,28,267,29,263,30,258,31,253,32,248,34,243,35,238,36,234,37,229,39,224,40,219,41,214,43,209,44,205,46,200,47,195,48,190,50,186,51,181,53,176,54,171,56,166,57,162,59,157,60,152,62,147,63,143,65,138,67,133,68,128,70,124,72,119,73,114,75,110,77,105,78,100,80,96,82,91,84,86,85,82,87,77,89,72,91,68,93,63,95,58,96,54,98,51,100],"215":[495,-1,490,-1,485,-1,480,-1,475,-1,470,-1,465,0,460,0,455,0,450,0,445,1,440,1,435,1,430,2,425,2,420,3,415,3,410,4,405,4,400,5,395,5,390,6,385,7,380,7,375,8,370,9,365,10,361,10,356,11,351,12,346,13,341,14,336,15,331,15,326,16,321,17,316,18,311,19,306,20,302,21,297,22,292,23,287,25,282,26,277,27,272,28,267,29,263,30,258,31,253,33,248,34,243,35,238,36,234,38,229,39,224,40,219,42,214,43,209,44,205,46,200,47,195,49,190,50,185,51,181,53,176,54,171,56,166,57,162,59,157,60,152,62,147,64,143,65,138,67,133,68,128,70,124,72,119,73,114,75,110,77,105,78,100,80,96,82,91,84,86,85,82,87,77,89,72,91,68,93,63,95,58,96,54,98,51,100],"220":[500,-1,495,-1,490,-1,485,-1,480,-1,475,-1,470,0,465,0,460,0,455,0,450,1,445,1,440,1,435,2,430,2,425,3,420,3,415,4,410,4,405,5,400,5,395,6,390,6,385,7,380,8,375,9,370,9,366,10,361,11,356,12,351,12,346,13,341,14,336,15,331,16,326,17,321,18,316,19,311,20,306,21,302,22,297,23,292,24,287,25,282,26,277,27,272,28,267,29,263,31,258,32,253,33,248,34,243,35,238,37,234,38,229,39,224,41,219,42,214,43,209,45,205,46,200,47,195,49,190,50,185,52,181,53,176,55,171,56,166,58,162,59,157,61,152,62,147,64,143,65,138,67,133,68,128,70,124,72,119,73,114,75,110,77,105,78,100,80,95,82,91,84,86,85,81,87,77,89,72,91,67,93,63,95,58,97,54,98,51,100,56,100,61,100],"225":[505,-1,500,-1,495,-1,490,-1,485,-1,480,-1,475,0,470,0,465,0,460,0,455,1,450,1,445,1,440,2,435,2,430,2,425,3,420,3,415,4,410,4,405,5,400,6,395,6,390,7,385,8,380,8,375,9,370,10,366,10,361,11,356,12,351,13,346,14,341,14,336,15,331,16,326,17,321,18,316,19,311,20,306,21,302,22,297,23,292,24,287,25,282,26,277,27,272,29,267,30,263,31,258,32,253,33,248,34,243,36,238,37,233,38,229,39,224,41,219,42,214,43,209,45,205,46,200,48,195,49,190,50,185,52,181,53,176,55,171,56,166,58,162,59,157,61,152,62,147,64,142,65,138,67,133,69,128,70,124,72,119,73,114,75,109,77,105,79,100,80,95,82,91,84,86,86,81,87,77,89,72,91,67,93,63,95,58,97,54,98,51,100,56,100],"230":[510,-1,505,-1,500,-1,495,-1,490,-1,485,-1,480,0,475,0,470,0,465,0,460,1,455,1,450,1,445,2,440,2,435,2,430,3,425,3,420,4,415,4,410,5,405,5,400,6,395,7,390,7,385,8,380,9,375,9,370,10,366,11,361,12,356,12,351,13,346,14,341,15,336,16,331,17,326,18,321,18,316,19,311,20,307,21,302,22,297,23,292,24,287,26,282,27,277,28,272,29,267,30,263,31,258,32,253,34,248,35,243,36,238,37,233,38,229,40,224,41,219,42,214,44,209,45,205,46,200,48,195,49,190,51,185,52,181,53,176,55,171,56,166,58,161,59,157,61,152,62,147,64,142,66,138,67,133,69,128,70,124,72,119,74,114,75,109,77,105,79,100,80,95,82,91,84,86,86,81,87,77,89,72,91,67,93,63,95,58,97,53,99,51,100],"-230":[50,-1,55,-1,60,-1,65,-1,70,-1,75,-1,80,0,85,0,90,0,95,1,100,1,105,2,110,2,115,3,120,4,125,5,130,6,134,8,139,10,143,12,147,15,151,19,152,24,152,29,150,33,147,37,144,41,141,45,137,48,134,52,130,55,126,58,122,61,117,64,113,66,109,69,105,72,101,74,96,77,92,79,87,82,83,84,79,86,74,88,70,91,65,93,61,95,56,97,52,99],"-225":[55,-1,60,-1,65,-1,70,-1,75,-1,80,-1,85,0,90,0,95,0,100,1,105,1,110,2,115,3,120,3,125,4,130,6,134,7,139,9,144,11,148,14,151,17,153,22,154,27,152,31,150,36,147,40,143,43,140,47,136,50,132,53,128,56,124,59,120,62,116,65,112,68,107,70,103,73,99,75,94,78,90,80,86,83,81,85,77,87,72,89,68,92,63,94,59,96,54,98,50,100],"-220":[60,-1,65,-1,70,-1,75,-1,80,-1,85,0,90,0,95,0,100,0,105,1,110,1,115,2,120,3,125,4,130,5,135,6,139,8,144,10,148,12,152,15,155,20,155,25,154,29,152,34,149,38,146,42,142,45,138,49,135,52,131,55,127,58,122,61,118,63,114,66,110,69,106,71,101,74,97,76,93,79,88,81,84,84,79,86,75,88,70,90,66,93,61,95,57,97,52,99,52,100,57,100],"-215":[65,-1,70,-1,75,-1,80,-1,85,-1,90,0,95,0,100,0,105,1,110,1,115,2,120,2,125,3,130,4,135,5,139,7,144,9,148,11,152,14,156,18,157,23,156,27,154,32,151,36,148,40,145,44,141,47,137,50,133,53,129,56,125,59,121,62,117,65,112,67,108,70,104,73,100,75,95,77,91,80,86,82,82,84,78,87,73,89,69,91,64,93,60,96,55,98,51,100,54,100],"-210":[70,-1,75,-1,80,-1,85,-1,90,-1,95,0,100,0,105,0,110,1,115,1,120,2,125,3,130,3,135,5,140,6,144,8,149,10,153,12,156,16,158,20,158,25,156,30,154,34,151,38,147,42,144,45,140,49,136,52,132,55,128,58,124,60,119,63,115,66,111,69,107,71,102,74,98,76,94,78,89,81,85,83,80,85,76,88,71,90,67,92,62,94,58,96,53,98,51,100],"-205":[75,-1,80,-1,85,-1,90,-1,95,-1,100,0,105,0,110,0,115,1,120,1,125,2,130,3,135,4,140,5,144,6,149,8,153,11,157,14,160,18,160,23,159,28,156,33,153,37,150,40,146,44,142,47,139,50,135,53,130,56,126,59,122,62,118,64,114,67,109,70,105,72,101,75,96,77,92,79,88,82,83,84,79,86,74,89,70,91,65,93,61,95,56,97,52,99,53,100,58,100,63,100,68,100],"-200":[80,-1,85,-1,90,-1,95,-1,100,-1,105,0,110,0,115,0,120,1,125,1,130,2,135,3,140,4,145,6,149,7,154,10,158,12,161,16,162,21,161,26,159,31,156,35,152,39,149,42,145,45,141,49,137,52,133,54,129,57,125,60,121,63,117,65,112,68,108,71,104,73,99,75,95,78,90,80,86,83,82,85,77,87,73,89,68,92,64,94,59,96,55,98,50,100,55,100],"-195":[85,-1,90,-1,95,-1,100,-1,105,-1,110,0,115,0,120,0,125,1,130,2,135,2,140,3,145,5,149,6,154,8,158,11,162,14,163,19,163,24,161,29,158,33,155,37,152,40,148,44,144,47,140,50,136,53,132,56,128,58,124,61,119,64,115,66,111,69,106,72,102,74,98,76,93,79,89,81,84,83,80,86,76,88,71,90,67,92,62,94,58,97,53,99,52,100],"-190":[90,-1,95,-1,100,-1,105,-1,110,-1,115,0,120,0,125,1,130,1,135,2,140,3,145,4,150,5,154,7,159,9,162,13,165,17,165,22,163,27,161,31,158,35,154,38,151,42,147,45,143,48,139,51,135,54,131,57,127,60,122,62,118,65,114,67,109,70,105,72,101,75,96,77,92,80,87,82,83,84,79,86,74,89,70,91,65,93,61,95,56,97,52,99,53,100,58,100,63,100],"-185":[95,-1,100,-1,105,-1,110,-1,115,-1,120,0,125,0,130,1,135,1,140,2,145,3,150,4,154,6,159,8,163,11,166,15,167,20,166,24,164,29,161,33,157,37,154,40,150,43,146,46,142,50,138,52,134,55,130,58,125,61,121,63,117,66,112,68,108,71,104,73,99,76,95,78,91,80,86,83,82,85,77,87,73,89,68,92,64,94,59,96,55,98,50,100,55,100],"-180":[100,-1,105,-1,110,-1,115,-1,120,-1,125,0,130,0,135,1,140,1,145,2,150,3,155,5,159,7,163,9,167,13,169,17,168,22,166,27,163,31,160,35,157,38,153,42,149,45,145,48,141,51,137,54,133,56,128,59,124,62,120,64,116,67,111,69,107,72,102,74,98,76,94,79,89,81,85,83,80,86,76,88,71,90,67,92,62,94,58,96,53,99,51,100],"-175":[105,-1,110,-1,115,-1,120,-1,125,0,130,0,135,0,140,1,145,2,150,3,155,4,159,5,164,8,168,11,170,15,170,20,169,25,166,29,163,33,159,36,156,40,152,43,148,46,144,49,140,52,136,55,132,57,127,60,123,63,119,65,114,68,110,70,106,72,101,75,97,77,92,80,88,82,84,84,79,86,75,89,70,91,66,93,61,95,56,97,52,99,53,100,58,100],"-170":[110,-1,115,-1,120,-1,125,-1,130,0,135,0,140,0,145,1,150,2,155,3,160,4,164,6,168,9,172,13,173,18,171,22,169,27,166,31,163,34,159,38,155,41,151,44,147,47,143,50,139,53,135,56,130,58,126,61,122,63,118,66,113,68,109,71,104,73,100,76,96,78,91,80,87,82,82,85,78,87,73,89,69,91,64,93,60,96,55,98,51,100],"-165":[115,-1,120,-1,125,-1,130,-1,135,0,140,0,145,1,150,1,155,2,160,3,164,5,169,7,173,11,175,15,174,20,172,25,169,29,166,32,162,36,158,39,154,42,150,45,146,48,142,51,138,54,134,56,129,59,125,62,121,64,116,67,112,69,108,72,103,74,99,76,95,79,90,81,86,83,81,85,77,88,72,90,68,92,63,94,59,96,54,98,51,100],"-160":[120,-1,125,-1,130,-1,135,-1,140,0,145,0,150,1,155,1,160,2,165,4,169,6,173,9,176,13,176,18,175,22,172,27,169,30,165,34,162,37,158,40,154,43,150,46,145,49,141,52,137,55,133,57,129,60,124,62,120,65,116,67,111,70,107,72,102,75,98,77,94,79,89,81,85,84,80,86,76,88,71,90,67,92,62,94,58,97,53,99],"-155":[125,-1,130,-1,135,-1,140,-1,145,0,150,0,155,1,160,2,165,3,169,5,174,7,177,10,179,15,178,20,175,24,172,28,169,32,165,35,161,38,157,42,153,44,149,47,145,50,141,53,136,55,132,58,128,61,123,63,119,66,115,68,110,70,106,73,101,75,97,77,93,80,88,82,84,84,79,86,75,89,70,91,66,93,61,95,57,97,52,99,53,100],"-150":[130,-1,135,-1,140,-1,145,-1,150,0,155,0,160,1,165,2,170,3,174,5,178,8,181,13,180,17,178,22,175,26,172,30,168,33,164,36,160,40,156,43,152,45,148,48,144,51,140,54,136,56,131,59,127,61,123,64,118,66,114,69,109,71,105,73,101,76,96,78,92,80,87,82,83,85,78,87,74,89,69,91,65,93,60,95,56,97,51,100,54,100],"-145":[135,-1,140,-1,145,-1,150,-1,155,0,160,0,165,1,170,2,175,4,179,6,182,10,183,15,181,20,178,24,175,28,172,31,168,34,164,38,160,41,156,43,152,46,148,49,143,52,139,54,135,57,130,59,126,62,122,64,117,67,113,69,109,72,104,74,100,76,95,78,91,81,86,83,82,85,77,87,73,89,68,92,64,94,59,96,55,98,50,100],"-140":[140,-1,145,-1,150,-1,155,-1,160,0,165,1,170,1,175,3,179,5,183,8,185,12,184,17,182,21,179,25,175,29,171,32,168,36,164,39,160,41,155,44,151,47,147,50,143,52,139,55,134,58,130,60,126,62,121,65,117,67,112,70,108,72,104,74,99,77,95,79,90,81,86,83,81,85,77,88,72,90,68,92,63,94,59,96,54,98,51,100,56,100],"-135":[145,-1,150,-1,155,-1,160,0,165,0,170,1,175,2,180,3,184,6,187,10,187,14,185,19,182,23,179,27,175,30,171,33,167,36,163,39,159,42,155,45,151,48,147,50,142,53,138,56,134,58,129,61,125,63,121,65,116,68,112,70,107,72,103,75,98,77,94,79,89,81,85,84,81,86,76,88,72,90,67,92,62,94,58,96,53,98,51,100],"-130":[150,-1,155,-1,160,-1,165,0,170,0,175,1,180,2,184,4,188,7,190,12,188,17,186,21,183,24,179,28,175,31,171,34,167,37,163,40,159,43,155,46,150,48,146,51,142,54,138,56,133,59,129,61,125,63,120,66,116,68,111,70,107,73,102,75,98,77,93,80,89,82,85,84,80,86,75,88,71,90,66,93,62,95,57,97,53,99,52,100,57,100],"-125":[155,-1,160,-1,165,-1,170,0,175,0,180,1,185,3,189,5,192,9,192,14,189,18,186,22,183,26,179,29,175,32,171,35,167,38,163,41,159,44,155,46,150,49,146,52,142,54,137,57,133,59,129,61,124,64,120,66,115,69,111,71,106,73,102,75,98,78,93,80,89,82,84,84,80,86,75,89,71,91,66,93,61,95,57,97,52,99],"-120":[160,-1,165,-1,170,-1,175,0,180,0,185,1,189,3,193,6,195,11,193,16,190,20,187,23,183,27,179,30,175,33,171,36,167,39,163,42,159,44,154,47,150,50,146,52,141,54,137,57,133,59,128,62,124,64,119,66,115,69,111,71,106,73,102,76,97,78,93,80,88,82,84,84,79,87,75,89,70,91,66,93,61,95,57,97,52,99],"-115":[165,-1,170,-1,175,-1,180,0,185,1,190,2,194,4,197,8,196,13,194,17,191,21,187,25,183,28,179,31,175,34,171,37,167,39,163,42,159,45,154,47,150,50,146,52,141,55,137,57,132,60,128,62,124,64,119,67,115,69,110,71,106,74,101,76,97,78,92,80,88,82,83,85,79,87,74,89,70,91,65,93,61,95,56,97,52,99],"-110":[170,-1,175,-1,180,-1,185,0,190,1,195,2,199,5,200,10,198,15,195,19,191,22,187,25,184,29,180,32,175,34,171,37,167,40,163,43,159,45,154,48,150,50,146,53,141,55,137,58,132,60,128,62,124,65,119,67,115,69,110,71,106,74,101,76,97,78,92,80,88,82,83,85,79,87,74,89,70,91,65,93,61,95,56,97,52,99,53,100],"-105":[175,-1,180,-1,185,-1,190,0,195,1,199,3,202,7,202,12,199,16,195,20,192,23,188,26,184,29,180,32,176,35,171,38,167,40,163,43,159,46,154,48,150,51,146,53,141,55,137,58,132,60,128,62,124,65,119,67,115,69,110,72,106,74,101,76,97,78,92,80,88,83,83,85,79,87,74,89,70,91,65,93,61,95,56,97,52,99,53,100,58,100,63,100],"-100":[180,-1,185,-1,190,-1,195,0,200,1,204,4,205,9,203,13,200,17,196,21,192,24,188,27,184,30,180,33,176,35,172,38,168,41,163,43,159,46,155,48,150,51,146,53,141,56,137,58,133,60,128,63,124,65,119,67,115,69,110,72,106,74,101,76,97,78,92,80,88,83,83,85,79,87,74,89,70,91,65,93,61,95,56,97,52,99,53,100,58,100,63,100],"-95":[185,-1,190,-1,195,-1,200,0,205,2,208,6,207,10,204,15,201,18,197,21,193,25,189,28,185,30,181,33,176,36,172,38,168,41,164,44,159,46,155,48,151,51,146,53,142,56,137,58,133,60,128,63,124,65,119,67,115,69,111,72,106,74,102,76,97,78,93,80,88,82,84,85,79,87,74,89,70,91,65,93,61,95,56,97,52,99,53,100],"-90":[190,-1,195,-1,200,0,205,1,209,3,211,7,209,12,205,16,202,19,198,22,194,25,190,28,185,31,181,34,177,36,173,39,168,41,164,44,160,46,155,49,151,51,147,53,142,56,138,58,133,60,129,63,124,65,120,67,115,69,111,72,106,74,102,76,98,78,93,80,88,82,84,85,79,87,75,89,70,91,66,93,61,95,57,97,52,99,53,100,58,100,63,100,68,100,73,100,78,100],"-85":[195,-1,200,-1,205,0,210,1,214,4,213,9,210,13,206,16,203,20,199,23,195,26,190,28,186,31,182,34,178,36,173,39,169,41,165,44,160,46,156,49,152,51,147,53,143,56,138,58,134,60,129,63,125,65,120,67,116,69,111,71,107,74,102,76,98,78,93,80,89,82,84,84,80,86,75,89,71,91,66,93,62,95,57,97,53,99],"-80":[200,-1,205,-1,210,0,215,1,217,6,215,10,211,14,208,17,204,20,200,23,196,26,191,29,187,31,183,34,178,36,174,39,170,41,165,44,161,46,157,49,152,51,148,53,143,56,139,58,134,60,130,62,126,65,121,67,117,69,112,71,108,73,103,76,99,78,94,80,90,82,85,84,80,86,76,88,71,90,67,92,62,95,58,97,53,99],"-75":[205,-1,210,-1,215,0,219,2,219,7,216,11,213,14,209,18,205,21,201,23,197,26,192,29,188,31,184,34,179,37,175,39,171,41,166,44,162,46,158,49,153,51,149,53,144,55,140,58,135,60,131,62,126,64,122,67,117,69,113,71,108,73,104,75,99,77,95,80,90,82,86,84,81,86,77,88,72,90,68,92,63,94,58,96,54,98,51,100],"-70":[210,-1,215,-1,220,0,223,4,221,8,218,12,214,15,210,18,206,21,202,24,198,26,193,29,189,32,185,34,181,36,176,39,172,41,167,44,163,46,158,48,154,51,150,53,145,55,141,57,136,60,132,62,127,64,123,66,118,68,114,71,109,73,105,75,100,77,96,79,91,81,87,83,82,85,78,88,73,90,68,92,64,94,59,96,55,98,50,100],"-65":[215,-1,220,-1,225,1,226,5,223,9,220,12,216,15,212,18,208,21,203,24,199,26,195,29,190,31,186,34,182,36,177,39,173,41,168,43,164,46,160,48,155,50,151,53,146,55,142,57,137,59,133,62,128,64,124,66,119,68,115,70,110,72,106,74,101,77,97,79,92,81,88,83,83,85,79,87,74,89,69,91,65,93,60,95,56,97,51,99,54,100],"-60":[220,-1,225,-1,229,1,229,6,225,10,221,13,217,16,213,19,209,21,205,24,201,26,196,29,192,31,187,34,183,36,179,39,174,41,170,43,165,46,161,48,156,50,152,52,147,55,143,57,138,59,134,61,129,63,125,65,120,68,116,70,111,72,107,74,102,76,98,78,93,80,89,82,84,85,80,87,75,89,71,91,66,93,62,95,57,97,52,99,52,100,57,100],"-55":[225,-1,230,-1,233,2,231,7,227,10,223,13,219,16,215,19,211,21,206,24,202,26,198,29,193,31,189,34,185,36,180,38,176,41,171,43,167,45,162,47,158,50,153,52,149,54,144,56,140,58,135,61,131,63,126,65,122,67,117,69,113,71,108,73,104,76,99,78,95,80,90,82,86,84,81,86,77,88,72,90,67,92,63,94,58,96,54,98],"-50":[230,-1,235,0,237,3,233,7,229,10,225,13,221,16,217,19,213,21,208,24,204,26,200,28,195,31,191,33,186,36,182,38,177,40,173,42,169,45,164,47,160,49,155,51,151,53,146,56,142,58,137,60,133,62,128,64,124,66,119,69,114,71,110,73,105,75,101,77,96,79,92,81,87,83,83,85,78,87,74,89,69,92,65,94,60,96,55,98,51,100],"-45":[235,-1,240,0,239,4,236,7,232,10,228,13,223,16,219,18,215,21,210,23,206,26,202,28,197,30,193,33,188,35,184,37,179,40,175,42,170,44,166,46,161,49,157,51,152,53,148,55,143,57,139,59,134,61,130,64,125,66,121,68,116,70,112,72,107,74,103,76,98,78,94,80,89,82,84,85,80,87,75,89,71,91,66,93,62,95,57,97,53,99,52,100,57,100],"-40":[240,-1,245,0,242,4,238,8,234,10,230,13,226,16,221,18,217,21,212,23,208,25,204,28,199,30,195,32,190,35,186,37,181,39,177,41,172,43,168,46,163,48,159,50,154,52,150,54,145,57,141,59,136,61,132,63,127,65,123,67,118,69,114,71,109,73,105,75,100,78,96,80,91,82,86,84,82,86,77,88,73,90,68,92,64,94,59,96,54,98,50,100],"-35":[245,-1,248,1,245,5,241,8,237,10,232,13,228,15,224,18,219,20,215,23,210,25,206,27,202,30,197,32,193,34,188,36,184,38,179,41,175,43,170,45,166,47,161,49,157,51,152,54,148,56,143,58,138,60,134,62,129,64,125,66,120,68,116,70,111,72,107,75,102,77,98,79,93,81,88,83,84,85,79,87,75,89,70,91,66,93,61,95,57,97,52,99,53,100],"-30":[250,-1,252,2,248,5,244,8,240,10,235,13,231,15,226,17,222,20,218,22,213,24,209,27,204,29,200,31,195,33,191,36,186,38,182,40,177,42,173,44,168,46,164,48,159,51,154,53,150,55,145,57,141,59,136,61,132,63,127,65,123,67,118,69,114,71,109,74,104,76,100,78,95,80,91,82,86,84,82,86,77,88,73,90,68,92,64,94,59,96,54,98],"-25":[255,-1,255,2,251,5,247,7,243,10,238,12,234,15,229,17,225,19,220,22,216,24,211,26,207,28,202,30,198,32,193,35,189,37,184,39,180,41,175,43,171,45,166,47,162,50,157,52,153,54,148,56,144,58,139,60,134,62,130,64,125,66,121,68,116,70,112,72,107,75,103,77,98,79,93,81,89,83,84,85,80,87,75,89,71,91,66,93,62,95,57,97,52,99],"-20":[260,-1,259,2,255,5,250,7,246,10,241,12,237,14,232,16,228,19,223,21,219,23,214,25,210,27,205,29,201,32,196,34,192,36,187,38,183,40,178,42,174,44,169,46,165,49,160,51,156,53,151,55,146,57,142,59,137,61,133,63,128,65,124,67,119,69,115,71,110,73,105,75,101,77,96,79,92,81,87,84,83,86,78,88,73,90,69,92,64,94,60,96,55,98,51,100,54,100,59,100,64,100],"-15":[265,-1,263,2,258,4,254,7,249,9,245,11,240,13,236,16,231,18,227,20,222,22,218,24,213,26,209,29,204,31,200,33,195,35,191,37,186,39,182,41,177,43,172,45,168,47,163,49,159,51,154,54,150,56,145,58,141,60,136,62,131,64,127,66,122,68,118,70,113,72,109,74,104,76,99,78,95,80,90,82,86,84,81,86,77,88,72,90,68,92,63,94,58,96,54,98,51,100],"-10":[270,-1,267,2,262,4,258,6,253,8,249,11,244,13,240,15,235,17,230,19,226,21,221,23,217,25,212,28,208,30,203,32,199,34,194,36,190,38,185,40,180,42,176,44,171,46,167,48,162,50,158,52,153,54,149,56,144,58,139,60,135,62,130,65,126,67,121,69,117,71,112,73,107,75,103,77,98,79,94,81,89,83,85,85,80,87,75,89,71,91,66,93,62,95,57,97,53,99],"-5":[275,-1,271,1,266,4,262,6,257,8,253,10,248,12,244,14,239,16,234,18,230,20,225,22,221,24,216,26,212,28,207,30,202,33,198,35,193,37,189,39,184,41,180,43,175,45,170,47,166,49,161,51,157,53,152,55,148,57,143,59,138,61,134,63,129,65,125,67,120,69,116,71,111,73,106,75,102,77,97,79,93,81,88,83,84,85,79,87,75,89,70,91,65,93,61,95,56,97,52,99,53,100]};

	var maxCurveCoefficient = GlobalData.maxCurveCoefficient;
	var paperWidth = GlobalData.paperWidth;
	var dataXStep = GlobalData.dataXStep;
	var dataYStep = GlobalData.dataYStep;
	var paperHeight = GlobalData.paperHeight;

	/**
	 * local variables
	 */
	var road = System.nameSpace("{systemName}.modules.road");

	/**
	 * module interface
	 */
	var module = System.nameSpace("{systemName}.modules.pathCacher", {

		// getRoadXByY
		getPointAtLength: function(length, rightSide){
			var dc;

			var cc = dc = rightSide ? -GlobalData.CurveCoefficient :
				GlobalData.CurveCoefficient;

				cc = (cc + GlobalData.maxCurveCoefficient) / dataXStep;
				cc = parseInt(cc) * dataXStep - GlobalData.maxCurveCoefficient;
				dc = dc - cc;

			var line = data[cc + ""];

			var y0, y1, y01, y11, dy;
				y0 = parseInt(length / dataYStep) * 2;
				y01 = y0 + 1;
				y1 = y0 + 2;
				y11 = y1 + 1;
				dy = length / dataYStep - parseInt(length / dataYStep);

			var aPoint, bPoint, cPoint;
				aPoint = [line[y0], line[y01]];
				bPoint = [line[y1], line[y11]];

			if(aPoint[1] === undefined || bPoint[1] === undefined)
				return null;

				cPoint = [aPoint[0] + (bPoint[0] - aPoint[0]) * dy,
					aPoint[1] + (bPoint[1] - aPoint[1]) * dy];

			var result = [cPoint[0] + dc * (paperHeight - length) / paperHeight,
				cPoint[1]];

			if(rightSide)
				result[0] = paperWidth - result[0];

			return result;
		}

	});

	/**
	 * initialize
	 */
}();
/**
 * @fileoverview background基础程序
 * @author dron
 * @date 2010-09-06
 */

void function(){
	/**
	 * configs
	 */
	var maxCurveCoefficient = GlobalData.maxCurveCoefficient;
	var paperWidth = GlobalData.paperWidth;
	var maxScrollSpeed = GlobalData.maxHillScrollSpeed;
	var cloudSpeedDivisor = GlobalData.cloudSpeedDivisor;

	/**
	 * local variables
	 */
	var hposition = 0;
	var cposition = 0;
	var road = System.nameSpace("{systemName}.modules.road");

	var cloudContainer = System.getModuleContainer("cloud");
		cloudContainer = Ucren.Element(cloudContainer);
	var cloudContainerStyle = cloudContainer.dom.style;

	var hillContainer = System.getModuleContainer("hill");
		hillContainer = Ucren.Element(hillContainer);
	var hillContainerStyle = hillContainer.dom.style;

	/**
	 * module interface
	 */
	var module = System.nameSpace("{systemName}.modules.background", {
		initialize: function(){
			cloudContainer.display(true);
			hillContainer.display(true);
			System.addEventListener("Timer", module.timer.bind(module));
		},

		timer: function(){

			if(GlobalData.CurveCoefficient == 0) // 如果没有弯度，无须位移
				return ;

			var add = maxScrollSpeed * GlobalData.Speed *
				(GlobalData.CurveCoefficient / maxCurveCoefficient);
			var add2 = add / cloudSpeedDivisor;

			hposition = (hposition + paperWidth + add) % paperWidth;
			cposition = (cposition + paperWidth + add2) % paperWidth;

			cloudContainerStyle.backgroundPosition = - cposition + "px 0";
			hillContainerStyle.backgroundPosition = - hposition + "px 0";
		}
	});

	/**
	 * initialize
	 */
}();
/**
 * @fileoverview cover基础程序
 * @author dron
 * @date 2010-09-05
 */

void function(){
	/**
	 * configs
	 */
	var margin = GlobalData.coverMargin;
	var zoomStart = GlobalData.coverZoomStart;
	var topPadding = GlobalData.coverTopPadding;
	var randomMarginScope = GlobalData.coverRandomMarginScope;
	var coverMovePixelDivisor = GlobalData.coverMovePixelDivisor;
	var coverTreesDensity = GlobalData.coverTreesDensity;
	var paperHeight = GlobalData.paperHeight;
	var createTimeout = GlobalData.coverCreateTimeout;
//	var lowestRenderSpeed = GlobalData.lowestRenderSpeed;
	var data = GlobalData.coversData;

	/**
	 * local variables
	 */
	var pathCacher = System.nameSpace("{systemName}.modules.pathCacher");
	var road = System.nameSpace("{systemName}.modules.road");
	var container = System.getModuleContainer("cover");
	var dataLength = data.length;
	var recycle = {};
	var zoomNum = 1 - zoomStart;
	var paper;
	var createFrameNumber = 0;
	var tmpNum = 0;
	var treeVisible = false;
//	var maxPathLength = road.getMaxPathLength();

	/**
	 * module interface
	 */
	var module = System.nameSpace("{systemName}.modules.cover", {

		coverMap: {},

		initialize: function(){
			paper = Raphael(container, 676, 300);
			System.addEventListener("Timer", module.timer.bind(module));

			for(var i = 0, r; i < dataLength; i ++)
				recycle[data[i].src] = [];
		},

		start: function(){
			GlobalData.Speed = 1; // 假设满速
			Ucren.each(20, this.timer.bind(this)); // 先跑 10 帧，把树跑出来
			GlobalData.Speed = 0;
		},

		createCover: function(dir){
			var da = data[Ucren.randomNumber(dataLength)];
			var img, rec;

			rec = recycle[da.src];
			if(rec[0])
				img = rec.shift();
			else
				img = paper.image(da.src, 0, 0, 0, 0);

			img.attr({ width: 0, height: 0 });
			img.toBack();

			if(treeVisible){
				img.show();
			}else{
				img.hide();
			}

			this.coverMap[tmpNum ++] = Ucren.apply(da, {
				img: img, dir: dir, pos: 0, times: 1,
				randomMargin: Ucren.randomNumber(randomMarginScope)
			});
		},

		showTree: function(){
			treeVisible = true;
			Ucren.each(this.coverMap, function(tree){
				tree.img.show();
			});
		},

		timer: function(){
			var speed = GlobalData.Speed;

			Ucren.each(this.coverMap, function(d, name){
				var point, zoom, width, height, left, top, clip, margin1, shadowHeight;

				point = pathCacher.getPointAtLength(d.pos, d.dir);
				if(!point){
					d.img.hide();
					recycle[d.src].push(d.img);
					delete this.coverMap[name];
					return ;
				}

				zoom = zoomStart + zoomNum * ((point[1] + 1) / paperHeight);
				margin1 = (margin + d.randomMargin) * zoom;
				shadowHeight = Math.ceil(d.shadowHeight * zoom); // Math.ceil 强调多压掉 1px

				width = d.width * zoom;
				height = d.height * zoom;
				left = d.dir ? (point[0] + margin1) : (point[0] - margin1 - width);
				top = point[1] - height + shadowHeight + topPadding;

				d.img.attr({ x: left, y: top, width: width, height: height });

				d.pos += d.times * d.times * speed /
					coverMovePixelDivisor;
				d.times += speed;
			}.bind(this));

			createFrameNumber += speed;
			if(createFrameNumber >= createTimeout){
				createFrameNumber = 0;
				this.createCover(0);
				this.createCover(1);
			}
		}
	});

	/**
	 * initialize
	 */
}();
/**
 * @fileoverview test基础程序
 * @author dron
 * @date 2010-09-04
 */

//void function(){
//	/**
//	 * configs
//	 */
//	var dataXStep = GlobalData.dataXStep;
//	var dataYStep = GlobalData.dataYStep;
//
//	/**
//	 * local variables
//	 */
//	var road = System.nameSpace("{systemName}.modules.road");
//	var hill = System.nameSpace("{systemName}.modules.hill");
//	var cover = System.nameSpace("{systemName}.modules.cover");
//	var timer = System.nameSpace("{systemName}.modules.timer");
//	var pathCacher = System.nameSpace("{systemName}.modules.pathCacher");
//
//	/**
//	 * module interface
//	 */
//	var module = System.nameSpace("{systemName}.modules.__________", {
//
//		initialize: function(){
//
//		},
//
//		// 随机测路程序
//		randomRoad: function(){
//			timer.start();
//			void function(){
//				var randomCurveCoefficient = Ucren.randomNumber(560) - 280;
//				road.setTargetCurveCoefficient(randomCurveCoefficient);
//				var randomTimeout = Ucren.randomNumber(3000);
//				setTimeout(arguments.callee, randomTimeout);
//			}();
//		},
//
//		// 生成路径缓存参照数据
//		buildCachePath: function(){
//			if(!window.confirm("因生成缓存数据需要进行大量计算，会消耗很长很长时间，且期间将导致浏览器假死（不是真死），是否继续？"))
//				return ;
//
//			var maxCurveCoefficient = GlobalData.maxCurveCoefficient;
//			var data = {};
//
//			System.addEventListener("RoadRender", function(n){
//				data[n + ""] = road.getPathArray(10);
//			});
//
//			var i = - maxCurveCoefficient;
//			void function(){
//				document.title = i;
//				if(i <= maxCurveCoefficient){
//					road.draw(i);
//					i += dataXStep;
//					setTimeout(arguments.callee, 1);
//				}else{
//					data = JSON.encode(data);
//					document.write("<textarea style='width: 100%; height: 100%;'>" + data + "</textarea>");
//				}
//			}();
//		},
//
//		// 路面覆盖测试
//		roadCoverTest: function(){
//			var container = System.getModuleContainer("cover");
//			System.addEventListener("RoadRender", function(){
//				var x0 = pathCacher.getRoadXScopeByY(0);
//				var x1 = pathCacher.getRoadXScopeByY(20);
//				var x2 = pathCacher.getRoadXScopeByY(40);
//				var x3 = pathCacher.getRoadXScopeByY(60);
//				var x4 = pathCacher.getRoadXScopeByY(80);
//				var x5 = pathCacher.getRoadXScopeByY(100);
//
//
//				container.innerHTML = "<div class='point' style='left: " + x0[0] +
//					"px; top: 200px; width: " + (x0[1] - x0[0]) + "px;'>&nbsp;</div>" +
//
//					"<div class='point' style='left: " + x1[0] +
//					"px; top: 220px; width: " + (x1[1] - x1[0]) + "px;'>&nbsp;</div>" +
//
//					"<div class='point' style='left: " + x2[0] +
//					"px; top: 240px; width: " + (x2[1] - x2[0]) + "px;'>&nbsp;</div>" +
//
//					"<div class='point' style='left: " + x3[0] +
//					"px; top: 260px; width: " + (x3[1] - x3[0]) + "px;'>&nbsp;</div>" +
//
//					"<div class='point' style='left: " + x4[0] +
//					"px; top: 280px; width: " + (x4[1] - x4[0]) + "px;'>&nbsp;</div>" +
//
//					"<div class='point' style='left: " + x5[0] +
//					"px; top: 300px; width: " + (x5[1] - x5[0]) + "px;'>&nbsp;</div>";
//			});
//
//			this.randomRoad();
//		},
//
//		// 路边移动物测试
//		treeTest: function(){
//			cover.start();
//			this.randomRoad();
//		},
//
//		// 山体及路边移动物测试
//		hillTreeTest: function(){
//			hill.show();
//			cover.start();
//			this.randomRoad();
//		}
//	});
//
//	/**
//	 * initialize
//	 */
//	module.initialize();
//}();
/**
 * @fileoverview buttons基础程序
 * @author dron
 * @date 2010-09-04
 */

//void function(){
//	/**
//	 * configs
//	 */
//
//	/**
//	 * local variables
//	 */
//	var module = System.nameSpace("{systemName}.modules.buttons");
//	var test = System.nameSpace("{systemName}.modules.test");
//	var container = System.getModuleContainer("buttons");
//
//	/**
//	 * module interface
//	 */
//	var module = System.nameSpace("{systemName}.modules.__________", {
//
//		initialize: function(){
//			if(!container)
//				return ;
//			var buttons = container.getElementsByTagName("button");
//			if(Ucren.isSafari)
//				buttons = Array.prototype.slice.call(buttons);
//			Ucren.each(buttons, function(button){
//				var attrDo = button.getAttribute("do");
//				button = Ucren.Element(button);
//
//				// 暂停按钮
//				if(attrDo == "pause"){
//					var pause = false;
//					button.dom.disabled = true;
//					button.addEvents({
//						click: function(){
//							var timer = System.nameSpace("{systemName}.modules.timer");
//							return function(){
//								pause = !pause;
//								if(pause){
//									timer.pause();
//									button.html("继续");
//								}else{
//									timer.start();
//									button.html("暂停");
//								}
//							};
//						}()
//					});
//
//					System.hook("TimerInRunning", function(value){
//						if(value){
//							pause = false;
//							button.html("暂停");
//							button.dom.disabled = false;
//						}else{
//							pause = true;
//							button.html("继续");
//						}
//					});
//
//				// 随机测路按钮
//				}else if(attrDo == "testRandomRoad"){
//					button.addEvents({
//						click: function(){
//							test.randomRoad();
//						}
//					});
//
//					System.hook("TimerInRunning", function(value){
//						if(value){
//							button.dom.disabled = true;
//						}
//					});
//
//				// 生成路径缓存参照数据按钮
//				}else if(attrDo == "buildCachePath"){
//					button.addEvents({
//						click: function(){
//							test.buildCachePath();
//						}
//					});
//
//				// 路面覆盖测试
//				}else if(attrDo == "roadCoverTest"){
//					button.addEvents({
//						click: function(){
//							test.roadCoverTest();
//						}
//					});
//
//					System.hook("TimerInRunning", function(value){
//						if(value){
//							button.dom.disabled = true;
//						}
//					});
//
//				// 路边移动物测试
//				}else if(attrDo == "treeTest"){
//					button.addEvents({
//						click: function(){
//							test.treeTest();
//						}
//					});
//
//					System.hook("TimerInRunning", function(value){
//						if(value){
//							button.dom.disabled = true;
//						}
//					});
//
//				// 山体及路边移动物测试
//				}else if(attrDo == "hillTreeTest"){
//					button.addEvents({
//						click: function(){
//							test.hillTreeTest();
//						}
//					});
//					System.hook("TimerInRunning", function(value){
//						if(value){
//							button.dom.disabled = true;
//						}
//					});
//
//				// 重来
//				}else if(attrDo == "restart"){
//					button.addEvents({
//						click: function(){
//							location.href = "?" + Math.random();
//						}
//					});
//
//					System.hook("TimerInRunning", function(value){
//						if(value){
//							button.dom.disabled = false;
//						}
//					});
//				}
//
//				// 其它情况
//	//			}else{
//	//				button = Ucren.Element(button);
//	//				System.hook("TimerInRunning", function(value){
//	//					if(value){
//	//						button.dom.disabled = true;
//	//					}
//	//				});
//	//			}
//			});
//		}
//	});
//
//	/**
//	 * initialize
//	 */
//	module.initialize();
//}();
/**
 * @fileoverview timer基础程序
 * @author dron
 * @date 2010-09-03
 */

void function(){
	/**
	 * configs
	 */
	var timeout = GlobalData.timerPeriod;

	/**
	 * local variables
	 */

	/**
	 * module interface
	 */
	var module = System.nameSpace("{systemName}.modules.timer", {

		initialize: function(){

		},

		start: function(){
			System.set("TimerInRunning", true);
			clearInterval(this.timer);
			this.timer = setInterval(System.fireEvent.saturate(System, "Timer"),
				timeout);
		},

		pause: function(){
			clearInterval(this.timer);
			System.set("TimerInRunning", false);
		}
	});

	/**
	 * initialize
	 */
}();
/**
 * @fileoverview speed模块
 * @author dron
 * @date 2010-09-18
 */

void function(){
	/**
	 * configs
	 */
	var speedUpNumber = GlobalData.speedUpNumber;
	var speedDownNumber = GlobalData.speedDownNumber;
	var naturalDownNumber = GlobalData.naturalDownNumber;
	var forciblySpeedDownNumber = GlobalData.forciblySpeedDownNumber;
	var lowSpeed = GlobalData.lowSpeed;
	var forciblySpeedDownLowestSpeed = GlobalData.forciblySpeedDownLowestSpeed;

	/**
	 * local variables
	 */
	var isUpKeyDown = false;
	var isDownKeyDown = false;
	var currentSpeed = 0;


	/**
	 * module interface
	 */
	var module = System.nameSpace("{systemName}.modules.speed", {

		initialize: function(){
			System.addEventListener("UpKey", this.speedUp.bind(this));
			System.addEventListener("DownKey", this.speedDown.bind(this));
			System.addEventListener("Timer", this.timer.bind(this));
		},

		speedUp: function(bool){
			isUpKeyDown = bool;
		},

		speedDown: function(bool){
			isDownKeyDown = bool;
		},

		// 强迫减速
		forciblySpeedDown: function(){
			if(currentSpeed < forciblySpeedDownLowestSpeed)
				return ;
			currentSpeed -= forciblySpeedDownNumber;
			if(currentSpeed < forciblySpeedDownLowestSpeed)
				currentSpeed = forciblySpeedDownLowestSpeed;
		},

		timer: function(){
			if(isUpKeyDown && currentSpeed < 1){
				currentSpeed += speedUpNumber;
				if(currentSpeed > 1)
					currentSpeed = 1;
			}else if(isDownKeyDown && currentSpeed > 0){
				currentSpeed -= speedDownNumber;
				if(currentSpeed < 0)
					currentSpeed = 0;
			}else if(!isUpKeyDown && !isDownKeyDown && currentSpeed > lowSpeed){
				currentSpeed -= naturalDownNumber;
				if(currentSpeed < 0)
					currentSpeed = 0;
			}

			GlobalData.Speed = currentSpeed;
		}
	});

	/**
	 * initialize
	 */
}();
/**
 * @fileoverview keymap基础程序
 * @author dron
 * @date 2010-09-07
 */

void function(){
	/**
	 * configs
	 */
	var maxDirKeyHoldNumer = GlobalData.maxDirKeyHoldNumer;

	/**
	 * local variables
	 */
	var speed = System.nameSpace("{systemName}.modules.speed");
	var isDirKeyDown = false;

	/**
	 * module interface
	 */
	var module = System.nameSpace("{systemName}.modules.keymap", {

		initialize: function(){
			var log = function(msg) {
				console.log(msg);
			};
			var conn = new MyWebSocket(REC_WS_URL);

			conn.on('open', function() {
				log( "Connected." );
			});

			conn.on('close', function(  ) {
				log( "Disconnected." );
				log( "retry..." );
				setTimeout(function() {
					conn.connect();
				}, 3000);
			});


			var id;

			var timer = function(cb, d, s) {
				setTimeout(function() {
					if(id) {
						clearInterval(id);
						id = null;
					}
				}, d);

				id = setInterval(cb, s);
			};

			conn.on('message', function( e ) {
				if(document.webkitHidden) {
					log('page hidden');
					return false;
				}

				var msg = e.data.trim();

				log(msg);

				if(id) {
					clearInterval(id);
					id = null;
				}

				switch(msg) {
					case "player.toggle":
						System.fireEvent("PKey");
						break;
					case "player.mute|1":
						System.fireEvent("UpKey", true);
						break;
					case "player.mute|0":
						timer(function() {
								System.fireEvent("DownKey", true);
							}, 1000, 25);
						break;
					case "player.v_up":
						timer(function() {
								isDirKeyDown = true;
								System.fireEvent("RightKey", true);
							}, 2000, 25);
						break;
					case "player.v_down":
						timer(function() {
								isDirKeyDown = true;
								System.fireEvent("LeftKey", true);
							}, 2000, 25);
						break;
				}
			});
			conn.connect();

			Ucren.addEvent(document, "keydown", function(e){
				e = Ucren.Event(e);
				switch(e.keyCode){
					case 37:
						isDirKeyDown = true;
						System.fireEvent("LeftKey"); break;
					case 38:
						System.fireEvent("UpKey", true); break;
					case 39:
						isDirKeyDown = true;
						System.fireEvent("RightKey"); break;
					case 40:
						System.fireEvent("DownKey", true); break;
					case 83:
						System.fireEvent("SKey"); break;
					case 80:
						System.fireEvent("PKey"); break;
				}
			});

			Ucren.addEvent(document, "keyup", function(e){
				e = Ucren.Event(e);
				switch(e.keyCode){
					case 37:
						isDirKeyDown = false;
						break;
					case 38:
						System.fireEvent("UpKey", false);
						break;
					case 39:
						isDirKeyDown = false;
						break;
					case 40:
						System.fireEvent("DownKey", false);
						break;
				}
			});

			System.addEventListener("Timer", this.timer.bind(this));
		},

		// for paddle，具体见 paddle.js 中的调用
		initPaddle: function(paddleGroup){
			var upKeyIsDown, downKeyIsDown, leftKeyIsDown, rightKeyIsDown;
			paddleGroup.on("change", function(angle, vigor){
				if(vigor > 0){
					if((angle < 90 || angle > 270) && !upKeyIsDown){ // up
						if(downKeyIsDown){
							System.fireEvent("DownKey", false);
							downKeyIsDown = false;
						}
						System.fireEvent("UpKey", true);
						upKeyIsDown = true;
					}else if((angle > 90 && angle < 270) && !downKeyIsDown){ // down
						if(upKeyIsDown){
							System.fireEvent("UpKey", false);
							upKeyIsDown = false;
						}
						System.fireEvent("DownKey", true);
						downKeyIsDown = true;
					}

					if((angle > 180 && angle < 360) && !leftKeyIsDown){ // left
						if(rightKeyIsDown)
							rightKeyIsDown = false;
						leftKeyIsDown = true;
						isDirKeyDown = true;
						System.fireEvent("LeftKey");
					}else if((angle > 0 && angle < 180) && !rightKeyIsDown){ // down
						if(leftKeyIsDown)
							leftKeyIsDown = false;
						rightKeyIsDown = true;
						isDirKeyDown = true;
						System.fireEvent("RightKey");
					}
				}else{
					if(upKeyIsDown){
						System.fireEvent("UpKey", false);
					}else if(downKeyIsDown){
						System.fireEvent("DownKey", false);
					}
					upKeyIsDown =
					downKeyIsDown =
					leftKeyIsDown =
					rightKeyIsDown =
					isDirKeyDown = false;
				}
			});
		},

		timer: function(){
			var dirKeyHoldNumer = GlobalData.dirKeyHoldNumer;
			if(isDirKeyDown && dirKeyHoldNumer < maxDirKeyHoldNumer){
				GlobalData.dirKeyHoldNumer ++;
			}else if(dirKeyHoldNumer > 0){
				GlobalData.dirKeyHoldNumer --;
			}
		}
	});

	/**
	 * initialize
	 */
}();
/**
 * @fileoverview car基础程序
 * @author dron
 * @date 2010-09-07
 */

void function(){
	/**
	 * configs
	 */
	var defaultLeft = GlobalData.carDefaultLeft;
	var carWidth = GlobalData.carWidth;
	var maxLeft = GlobalData.carMaxLeft;
	var picLength = GlobalData.carPicLength;
	var maxCentrifugalForce = GlobalData.carMaxCentrifugalForce;
	var maxTrunForce = GlobalData.carMaxTrunForce;

	/**
	 * local variables
	 */
	var road = System.nameSpace("{systemName}.modules.road");
	var keymap = System.nameSpace("{systemName}.modules.keymap");
	var speed = System.nameSpace("{systemName}.modules.speed");
	var container = System.getModuleContainer("car");
		container = Ucren.Element(container);
	var _picLength = picLength - 1;
	var picDefaultPosition = _picLength / 2; // 背景位置
	var picNowPosition = picDefaultPosition;
	var maxCurveCoefficient = GlobalData.maxCurveCoefficient;
	var turnDirection = 0; // -1, 1
	var maxKeyHoldNumer = GlobalData.maxDirKeyHoldNumer;
	var slippage = new Ucren.BasicSlippage({
		container: container,
		width: 100,
		height: 100,
		image: "images/car.png",
		length: picLength,
		direction: "horizontal",
		defaultPosition: picDefaultPosition
	});

	var left = 0; // 相对 defaultLeft

	/**
	 * module interface
	 */
	var module = System.nameSpace("{systemName}.modules.car", {

		initialize: function(){
			slippage.render();
			System.addEventListener("Timer", module.timer.bind(module));
			System.addEventListener("LeftKey", module.setTurnDirection.saturate(module, -1));
			System.addEventListener("RightKey", module.setTurnDirection.saturate(module, 1));
		},

		setTurnDirection: function(direction){
			turnDirection = direction;
		},

		timer: function(){

			var _speed = GlobalData.Speed;

			if(_speed == 0) // 速度为 0 时，不用再渲染
				return ;

			var lastLeft = left;

			var keyHoldNumer = GlobalData.dirKeyHoldNumer;
			if(keyHoldNumer) // 先计算转向的影响
				left += (maxTrunForce * keyHoldNumer / maxKeyHoldNumer * _speed) * turnDirection;

			var curveCoefficient = GlobalData.CurveCoefficient;
			if(curveCoefficient) // 再计算离心力的影响
				left -= maxCentrifugalForce * curveCoefficient / maxCurveCoefficient * _speed;

			if(Math.abs(left) > maxLeft){
				left = left > 0 ? maxLeft : -maxLeft;
				speed.forciblySpeedDown();
			}

			if(lastLeft != left)
				container.left(defaultLeft + left - carWidth / 2);

			var di = Math.round(left / maxLeft * picDefaultPosition / 2) -
				Math.round(curveCoefficient / maxCurveCoefficient * picDefaultPosition / 2);
			var nowPosition = di + picDefaultPosition;

			if(nowPosition > _picLength)
				nowPosition = _picLength;
			else if(nowPosition < 0)
				nowPosition = 0;

			if(nowPosition != picNowPosition){
				slippage.change(nowPosition);
				picNowPosition = nowPosition;
			}
		}
	});

	/**
	 * initialize
	 */
}();
/**
 * @fileoverview dashboard 模块
 * @author dron
 * @date 2010-09-21
 */

void function(){
	/**
	 * configs
	 */
	var paperWidth = GlobalData.dashboardWidth;
	var paperHeight = GlobalData.dashboardHeight;
	var pointerSize = GlobalData.dashboardPointerSize;
	var img = GlobalData.dashboardPointerImage;
	var maxRotation = GlobalData.dashboardPointerMaxRotation;
	var dashboardPointerShakeSize = GlobalData.dashboardPointerShakeSize;

	/**
	 * local variables
	 */
	var container = System.getModuleContainer("dashboard");
	var pointerLeft = Math.ceil((paperWidth - pointerSize) / 2);
	var shakeNumber = 0;
	var shakeDir = .2;
	var paper;
	var lastSpeed = -1;

	/**
	 * module interface
	 */
	var module = System.nameSpace("{systemName}.modules.dashboard", {
		initialize: function(){
			paper = Raphael(container, paperWidth, paperHeight);
			img = paper.image(img, pointerLeft, 0, pointerSize, pointerSize);
			System.addEventListener("Timer", this.timer.bind(this));
		},

		timer: function(){

			if(lastSpeed && lastSpeed == GlobalData.Speed){
				shakeNumber += shakeDir * 10;
				if(shakeNumber == dashboardPointerShakeSize * 10){
					shakeDir = - 0.2;
				}else if(shakeNumber == - dashboardPointerShakeSize * 10){
					shakeDir = .2;
				}
			}else{
				shakeNumber = 0;
			}

			var num = GlobalData.Speed * maxRotation + shakeNumber / 10;
			if(num < 0)
				num = 0;
			img.rotate(num, true);
			lastSpeed = GlobalData.Speed;
		}
	});

	/**
	 * initialize
	 */
}();
/**
 * @fileoverview pause模块
 * @author dron
 * @date 2010-09-22
 */

void function(){
	/**
	 * configs
	 */

	/**
	 * local variables
	 */
	var paused = false;
	var pauseHand, pauseBlink;
	var pauseEl = Ucren.Element("pause");
	var timer = System.nameSpace("{systemName}.modules.timer");

	/**
	 * module interface
	 */
	var module = System.nameSpace("{systemName}.modules.pause", {

		initialize: function(){
			System.addEventListener("PKey", function(){
				if(!GlobalData.started)
					return ;
				paused = !paused;
				if(paused){
					timer.pause();
					module.show();
				}else{
					timer.start();
					module.hide();
				}
			});
		},

		show: function(){
			clearInterval(pauseHand);
			pauseHand = setInterval(function(){
				pauseEl.display(pauseBlink = !pauseBlink);
			}, 250);
		},

		hide: function(){
			clearInterval(pauseHand);
			pauseEl.display(false);
		}
	});

	/**
	 * initialize
	 */
}();
/**
 * @fileoverview paddle 模块
 * @author dron
 * @date 2010-12-01
 */

void function(){

	var module = System.nameSpace("{systemName}.modules.paddle", {

		// scene
		scene: Ucren.Class(
			/* constructor */ function(conf){

				// scene.container
				this.container = Ucren.Element(conf.container);

				// scene.width
				this.width = Ucren.fixNumber(conf.width, 640);

				// scene.height
				this.height = Ucren.fixNumber(conf.height, 480);

				// scene.pic
				this.pic = Ucren.fixString(conf.pic, "");
			},

			/* methods */ {

				// scene.render()
				render: function(){
					var container = this.container;
					container.addClass("paddle-scene");
					container.width(this.width);
					container.height(this.height);
					container.usePNGbackground(this.pic);
				}
			}
		),

		// dragItem
		dragItem: Ucren.Class(
			/* constructor */ function(conf){

				// dragItem.width
				this.width = Ucren.fixNumber(conf.width, 50);

				// dragItem.height
				this.height = Ucren.fixNumber(conf.height, 50);

				// dragItem.left
				this.left = Ucren.fixNumber(conf.left, 0);

				// dragItem.top
				this.top = Ucren.fixNumber(conf.top, 0);

				// dragItem.moveMultiples
				this.moveMultiples = Ucren.fixNumber(conf.moveMultiples, 1);

				// dragItem.pic
				this.pic = Ucren.fixString(conf.pic, "");

				// dragItem.primary
				this.primary = !! conf.primary;

				//-----

				// dragItem.diffX
				this.diffX = 0;

				// dragItem.diffY
				this.diffY = 0;

				// dragItem.scene
				this.scene = conf.scene;

				// dragItem.group
				this.group = null;
			},

			/* methods */ {

				// dragItem.render()
				render: function(){
					var container =	this.scene.container;
					var layer = Ucren.createLayer();
					container.add(layer);

					layer = Ucren.Element(layer);
					layer.addClass("paddle-item");
					layer.width(this.width);
					layer.height(this.height);
					layer.left(this.left);
					layer.top(this.top);
					layer.usePNGbackground(this.pic);
					this.layer = layer;
					this.useDragEvent();
				},

				// dragItem.useDragEvent()
				useDragEvent: function(){
					var layer = this.layer;
					var drag = new Ucren.BasicDrag({ type: "calc" });
					drag.bind(layer);

					drag.on("returnValue", function(dx, dy){
						var group = this.group;
						if(group.running){
							group.stopHoming();
						}
						group.setDiffXY(dx, dy);
						group.preFireEvent(dx, dy);
					}.bind(this));

					drag.on("endDrag", function(){
						var group = this.group;
						group.running || group.homing();
					}.bind(this));
				},

				// dragItem.refresh()
				refresh: function(){
					var layer = this.layer;
					layer.left(this.left + this.diffX);
					layer.top(this.top + this.diffY)
				}
			}
		),

		// dragGroup
		dragGroup: Ucren.Class(
			/* constructor */ function(conf){

				// dragGroup.itemGlobalConf (for createItem)
				this.itemGlobalConf = Ucren.fixConfig(conf.itemGlobalConf);

				// dragGroup.limit
				this.limit = Ucren.fixNumber(conf.limit, 20);

				//-----

				this.dx =
				this.dy = 0;

				// dragGroup.items
				this.items = [];
			},

			/* methods */ {

				// dragGroup.addItem()
				addItem: function(item){
					this.items.push(item);
					item.group = this;
				},

				// dragGroup.createItem()
				createItem: function(itemConf){
					var item = new module.dragItem(Ucren.apply(this.itemGlobalConf, itemConf));
						item.render();
					this.addItem(item);
				},

				// dragGroup.setDiffXY()
				setDiffXY: function(dx, dy){
					var limit = this.limit;
					var distance = Math.sqrt(dx * dx + dy * dy);
					var zoom;

					if(distance > limit){
						zoom = limit / distance;
						dx *= zoom;
						dy *= zoom;
					}

					this.dx = dx;
					this.dy = dy;

					Ucren.each(this.items, function(item){
						item.diffX = dx * item.moveMultiples;
						item.diffY = dy * item.moveMultiples;
						item.refresh();
					});
				},

				// dragGroup.homing()
				homing: function(){
					this.running = true;

					var elastic = function(index, offset, target, framesNum, a, p){
						var s;
						if(index == 0)
							return offset;
						else if((index /= framesNum) == 1)
							return offset + target;

						if(!p)
							p = framesNum * .3;

						if(!a || a < Math.abs(target)){
							a = target;
							s = p / 4;
						}else
							s = p / (2 * Math.PI) * Math.asin(target / a);

						return a * Math.pow(2, -10 * index) * Math.sin((index * framesNum - s) * (2 * Math.PI) / p) + target + offset;
					};

					var index = 0;
					var timeout = Ucren.isIe ? 20 : 30;
					var dx = this.dx;
					var dy = this.dy;

					var animation = function(){
						var zoom;
						zoom = 100 - elastic(index, 0, 100, 20);
						zoom /= 100;
						this.setDiffXY(dx * zoom, dy * zoom);
						if(index < 20){
							index ++;
							this.doing = setTimeout(animation, timeout);
						}else{
							this.setDiffXY(0, 0);
							this.running = false;
						}
					}.bind(this);

					this.preFireEvent(0, 0);
					animation();
				},

				// dragGroup.stopHoming()
				stopHoming: function(){
					clearTimeout(this.doing);
					this.setDiffXY(0, 0);
					this.running = false;
					this.preFireEvent(0, 0);
				},

				// dragGroup.preFireEvent()
				preFireEvent: function(dx, dy){
					// 12 点钟方向算 0 度，顺时针加度，逆时针从 360 度开始减度
					var angle;
					var distance = Math.sqrt(dx * dx + dy * dy);
					var limit = this.limit;
					var vigor;

					if(dx || dy){
						angle = 180 - Math.atan2(dx, dy) * 180 / Math.PI;
					}else{
						angle = 0;
					}

					if(distance > limit){
						distance = limit;
					}

					vigor = distance / limit * 100;

					this.fireEvent("change", [
						angle.toFixed(2) - 0,
						vigor.toFixed(2) - 0
					]);
				}
			}
		)

	});
}();

loader.loaded.systemJS = true;